#
#    This software is Copyright by the Board of Trustees of Michigan
#    State University (c) Copyright 2005.
#
#    You may use this software under the terms of the GNU public license
#    (GPL).  The terms of this license are described at:
#
#     http://www.gnu.org/licenses/gpl.txt
#
#     Author:
#             Ron Fox
#            NSCL
#            Michigan State University
#            East Lansing, MI 48824-1321
#
#----------- Setup environment

set here [file dirname [info script]]

# starting to just get too tough to do this without
# packaging:
package require tcltest

set auto_saved $auto_path
set auto_path [concat $here $auto_path]


if {[file exists pkgIndex.tcl]} {
    file delete              pkgIndex.tcl.saved
    file rename pkgIndex.tcl pkgIndex.tcl.saved
}
pkg_mkIndex . *.tcl

package require dataSources

#----------- Test utility procs





#----------- Tests:

# Empty data source gives EOF.

tcltest::test 1.0 {Data Source is empty} \
-constraints unix                       \
-setup {
    set fd [open [file join [pwd] emptyfile.testdata] w]
    close $fd
}                                      \
-cleanup {
    file delete [file join [pwd] emptyfile.testdata]

}                                      \
-body {
    offlineDataSource empty -file [file join [pwd] emptyfile.testdata]
    empty open
    set status [catch {empty getNext} retval]
    empty destroy

    set result [list $status $retval]
}                                      \
-result {1 {End of Data Source}}


#   File we don't have read perms for gives
#   File not Readable error.

tcltest::test 1.1  {File not readable}   \
-constraints {unix}                      \
-setup {
    tcltest::makeFile [list] notreadable.testdata
    file attributes notreadable.testdata -permissions 0
}                                        \
-cleanup {
    file attributes notreadable.testdata -permissions 0666
    tcltest::removeFile notreadable.testdata
}                                        \
-body {
    offlineDataSource noperms -file notreadable.testdata
    set status [catch {noperms open} msg]
    noperms destroy

    set result [list $status $msg]

}                                        \
-result {1 {File not Readable}}

#  File does not exist.
#
tcltest::test 1.2 {File does not exist} \
-body {
    # God help me if this file actually exists!!!!

    offlineDataSource nofile -file aaabccerej.junky.doesnotexist
    set status [catch {nofile open} msg]
    nofile destroy

    set result [list $status $msg]
}                                        \
-result {1 {No Such File}}

# Create a 16 word counting pattern file and
# read it as a 16 word buffer.
#
tcltest::test 2.0 {Read 16 word counting pattern single buffer}  \
-constraints unix                                             \
-setup {
    set data [makeCountingPattern 0 15]
    set binaryData [binary format s16 $data]
    writeBinaryFile $binaryData  [file join [pwd] counting16.testdata]

}                                                            \
-cleanup {
    file delete [file join [pwd] counting16.testdata]
}                                                           \
-body {
    offlineDataSource test -file counting16.testdata -buffersize 32
    test open
    set data [test getNext]
    test close

    set data
}                                                               \
-match list                                                     \
-result {0x0000 0x0001 0x0002 0x0003 0x0004 0x0005 0x0006 0x0007 0x0008
         0x0009 0x000a 0x000b 0x000c 0x000d 0x000e 0x000f}

tcltest::test 2.1 {Read 8 word counting patterns into 2 buffers}  \
-constraints unix                                                 \
-setup {
    set data [makeCountingPattern 0 15]
    set binaryData [binary format s16 $data]
    writeBinaryFile $binaryData [file join [pwd] counting16.testdata]
}                                                                  \
-cleanup {
    file delete [file join [pwd] counting16.testdata]
}                                                                  \
-body {
    offlineDataSource test -file counting16.testdata -buffersize 16
    test open
    set data [test getNext]
    set data [list $data [test getNext]]

    test close
    set data
}                                                                  \
-match list                                                        \
-result {{0x0000 0x0001 0x0002 0x0003 0x0004 0x0005 0x0006 0x0007}
         {0x0008 0x0009 0x000a 0x000b 0x000c 0x000d 0x000e 0x000f}}


tcltest::test 2.2 {Read 4 word counting patterns into 4 buffers test resids} \
-constraints unix                    \
-setup {
    set data [makeCountingPattern 0 15]
    set binaryData [binary format s16 $data]
    writeBinaryFile $binaryData [file join [pwd] counting16.testdata]
}                                                                  \
-cleanup {
    file delete [file join [pwd] counting16.testdata]
}                                                                  \
-match list                                                        \
-body {
    offlineDataSource test -file counting16.testdata -buffersize 8
    test open
    set data [list [test getNext]]
    lappend data [test getNext]
    lappend data [test getNext]
    lappend data [test getNext]

    test close
    set data
}                                                                  \
-result {{0x0000 0x0001 0x0002 0x0003}
         {0x0004 0x0005 0x0006 0x0007}
         {0x0008 0x0009 0x000a 0x000b}
         {0x000c 0x000d 0x000e 0x000f}}


tcltest::test 2.3 {read 3 word counting patterns more resid testings} \
-constraints unix                                                    \
-setup {
    set data [makeCountingPattern 0 15]
    set binaryData [binary format s16 $data]
    writeBinaryFile $binaryData [file join [pwd] counting16.testdata]
}                                                                   \
-cleanup {
    file delete [file join [pwd] counting16.testdata]
}                                                                    \
-match list                                                          \
-body {
    offlineDataSource test -file counting16.testdata -buffersize 6
    test open
    set data [list [test getNext]]
    lappend data [test getNext]
    lappend data [test getNext]
    lappend data [test getNext]
    lappend data [test getNext]
    lappend data [test getNext]

    test close
    set data
}                                                                  \
-result {{0x0000 0x0001 0x0002}
         {0x0003 0x0004 0x0005}
         {0x0006 0x0007 0x0008}
         {0x0009 0x000a 0x000b}
         {0x000c 0x000d 0x000e}
         {0x000f 0x 0x}}

#----------- Test environment cleanup


file delete pkgIndex.tcl
if {[file exists pkgIndex.tcl.saved]} {
    file rename pkgIndex.tcl.saved pkgIndex.tcl
}
set auto_path $auto_saved


tcltest::cleanupTests
