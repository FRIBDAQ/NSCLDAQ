#
#    This software is Copyright by the Board of Trustees of Michigan
#    State University (c) Copyright 2005.
#
#    You may use this software under the terms of the GNU public license
#    (GPL).  The terms of this license are described at:
#
#     http://www.gnu.org/licenses/gpl.txt
#
#     Author:
#             Ron Fox
#	     NSCL
#	     Michigan State University
#	     East Lansing, MI 48824-1321
#

#----------- Setup environment

set here [file dirname [info script]]

# starting to just get too tough to do this without
# packaging:
package require tcltest

set auto_saved $auto_path
set auto_path [concat $here $auto_path]


if {[file exists pkgIndex.tcl]} {
    file delete              pkgIndex.tcl.saved
    file rename pkgIndex.tcl pkgIndex.tcl.saved
}
pkg_mkIndex . *.tcl

package require eventData

#----------- Test utility procs

#   Return the known packet list.
#
proc makeKnownPackets {} {
    set timestamp    [clock format [clock seconds]]
    set packetId      0x8000
    set packets [list]
    for {set i 0} {$i < 20} {incr i} {
        set description  [packetDescription    pkt$packetId          \
                          -packet "junk$packetId:$packetId:Test packet type:0.1:$timestamp"]
        lappend packets $description
        incr packetId
    }
    return $packets
}
#
#   Get rid of the known packet list.
#
proc destroyKnownPackets {} {
    set packetId 0x8000
    for {set i 0} {$i < 20} {incr i} {
        pkt$packetId destroy
        incr packetId
    }
}


#
#   Create the 'monster ok event'.
#
proc createMonsterEvent {} {
    set event [list 34 3 0x8000 1  4 0x8001 1 2 5 0x8002 1 2 3      \
                         6 0x8003 1 2 3 4  7 0x8004 1 2 3 4 5         \
                         8 0x8005 1 2 3 4 5 6]
    return $event
}
#----------- Tests:

::tcltest::test 1.0 {packet counting 1}                     \
-setup {
    set packets [makeKnownPackets]
    set event [list 6 5 0x8003 1 2 3]
    Event testEvent -packets $packets -event $event
}                                                           \
-cleanup {
    testEvent destroy
    destroyKnownPackets
}                                                           \
-body {
    set packets [testEvent packetCount]
}                                                           \
-result {1}

::tcltest::test 1.1 {Packet counting 6}                     \
-setup {
    set event [createMonsterEvent]
    set packets [makeKnownPackets]
    Event testEvent -packets $packets -event $event

}                                                         \
-cleanup {
    testEvent destroy
    destroyKnownPackets
}                                                         \
-body {
    set size [testEvent packetCount]

}                                                         \
-result {6}

::tcltest::test 1.2 {Packet counting no known: }            \
-setup {
    set packets [makeKnownPackets]
    set event [list 6 5 0x2003 1 2 3]
    Event testEvent -packets $packets -event $event
}                                                            \
-cleanup {
    testEvent destroy
    destroyKnownPackets
}                                                             \
-body {
    set pkts [testEvent packetCount]
}                                                           \
-result {0}

::tcltest::test 2.0 {get packets}                           \
-setup {
    set packets [makeKnownPackets]
    set event   [createMonsterEvent]
    Event testEvent -packets $packets -event $event

}                                                           \
-cleanup {
    testEvent destroy
    destroyKnownPackets
}                                                           \
-body {
    set count [testEvent packetCount]
    set packets [list]
    for {set i 0} {$i < $count} {incr i} {
        lappend packets [lindex [testEvent getPacket $i] 1]
    }
    set packets
}                                                          \
-result {1 {1 2} {1 2 3} {1 2 3 4} {1 2 3 4 5} {1 2 3 4 5 6}}

::tcltest::test 2.1 {get packet descriptions}            \
-setup {
    set packets [makeKnownPackets]
    set event   [createMonsterEvent]
    Event testEvent -packets $packets -event $event
}                                                        \
-cleanup {
    testEvent destroy
    destroyKnownPackets
}                                                        \
-body {
    set count [testEvent packetCount]
    set packets [list]
    for {set i 0} {$i < $count} {incr i} {
        set description [lindex [testEvent getPacket $i] 0]
        lappend packets [$description getId]
    }
    set packets
}                                                        \
-match list                                              \
-result {0x8000 0x8001 0x8002 0x8003 0x8004 0x8005}

::tcltest::test 2.2 {Get packet out of range}                 \
-setup {
    set packets [makeKnownPackets]
    set event   [createMonsterEvent]
    Event testEvent -packets $packets -event $event
}                                                          \
-cleanup {
    testEvent destroy
    destroyKnownPackets
}                                                           \
-body {
    set result [testEvent getPacket 100]
}                                                         \
-result {}


tcltest::test 3.0  {Incorrect packet size}                  \
-setup {
    set packets [makeKnownPackets]
    Event testEvent -packets $packets
}                                                         \
-cleanup {
    testEvent destroy
    destroyKnownPackets
}                                                         \
-body {
    set event [list 3 4 0x8000]
    set result [catch {testEvent configure -event $event} msg]
    list $result $msg

}                                                         \
-result {1 {Event Format Error}}

tcltest::test 3.1  {Incorrect event size}                  \
-setup {
    set packets [makeKnownPackets]
    Event testEvent -packets $packets
}                                                         \
-cleanup {
    testEvent destroy
    destroyKnownPackets
}                                                         \
-body {
    set event [list 3 4 0x8000 0 1]
    set result [catch {testEvent configure -event $event} msg]
    list $result $msg

}                                                         \
-result {1 {Event Format Error}}
#----------- Test environment cleanup


file delete pkgIndex.tcl
if {[file exists pkgIndex.tcl.saved]} {
    file rename pkgIndex.tcl.saved pkgIndex.tcl
}
set auto_path $auto_saved


tcltest::cleanupTests
