.TH ScalerDisplay 1 "March 2005" ScalerDisplay-2.0 "USER COMMANDS"

.SH NAME
ScalerDisplay \- NSCL Supported Scaler Display program for NSCLDAQ.

.SH SYNOPSIS
.PP
.B export DAQHOST=datasourcecomputer
.PP
.B ScalerDisplay configurationfile

.SH DESCRIPTION
.PP
   This script provides a configurable scaler display for the NSCL Data
Acquisition system.  The script requires that:

.TP
\-
An environment variable named DAQHOST be defined to be the name of the
computer that is taking data.  At the NSCL this will usually be a system
named spdaqnn where nn is a two digit number.

.TP
\-
A single command parameter provides the name of a TCL script that is used
to configure the display.  The full range of TCL functionality may be used
by this configuration script.  The display script, in addition defines several
commands that are used to configure the display (See CONFIGURATION COMMANDS
below).

.PP
In addition to configuring the display itself, ScalerDisplay supports the
invocation of user written code at well defined points of operations.  For more
information about that see CALLOUTS below.

.SH "CONFIGURATION COMMANDS"

.PP
The ScalerDisplay program recognizes the following items

.TP
channels \-
A channel is a scaler channel.  It has a name and an index.  The name is used
to refer to and label the channel. The index is the offset into the set of
scalers (numbered from 0) that contains that channel.

.TP
pages \-
A page is a set of scalers grouped together on one display page.  Pages have a
title, which is an arbitrary text string that is displayed at the top of the
page when the page is active, and a Tabname which is used to select the page
from the tabbed notebook widget that displays them.

.TP
lines \-
A line is  a single scaler or a pair of scalers  or blank displayed on a line of
the scaler display.

.TP
stripcharts \-
A strip chart is a plot of the rate of one or more scaler channels or their ratios
with respect to time.   The strip chart part of the user interface is only
visible if configured or at least one channel has been added to the chart.

Channels are defined using the
.I channel
command.  The format of this command is:
.nf

channel ?-lowalarm value? ?-hialarm value? name index

.fi

The \?\-lowalarm option allows you to specify a rate
below which the channel is considered to be in the low alarm state.
Channels in the low alarm state, and their counts are displayed in the
low alarm color which defaults to green (see CONFIGURATION below).
The \?\-hialarm option allows you to specify a rate above which the
channel is considered to be in the high alarm state.  Channels in the
high alarm state and their counts are displayed in the high alarm color which
defaults to red.  Note that in the case of a ratio where one is in high alarm
state and the other is in low alarm state, the colors of the names reflects
the individual channel alarm states while the rate values are shown using the
'both alarm' color which defaults to orange.

Pages are defined via the
.I page
command.  The format of this command is:
.nf

page Tabname "Some meaningful title string"

.fi
Note that the title string must be enclosed in quotes if it contains whitespace
or other TCL word-separators.  The \fITabname\fR text is used to label the tab
of the page in the tabbed notebook widget that is used to display the scalers.
If a page that is not currently being displayed has alarms, its tab will be
displayed using either the low, high or both alarm color as appropriate to the
alarm state of the channels within that page.

Single scaler lines are defined via the
.I display_single

command. The format of this command is:
.nf

display_single Tabname channelname

.fi

Where
.I Tabname
is the Tab name of a scaler page and
.I channelname
is the name of a scaler channel.


Ratio lines are defined via the
.I display_ratio
command:

.nf

display_ratio  Tabname numerator_chanel denominator_channel

.fi

Blank lines are defined via the
.I blank
command:

.nf

blank Tabname

.fi

Strip charts are defined using the
.I stripparam
.I stripratio
and
.I stripconfig
commands.  The format of the \fIstripparam\fR command is:
.nf

stripparam channel

.fi
The \fIchannel\fR is the name of a channel defined by the \fIchannel\fR
command.  The count rates of this scaler are added to the set of scaler
rates on the strip chart using the next free line color and style (see
CONFIGURATION below).

.nf

stripratio numerator denominator

.fi
The ratio of the rates in the two channels \fInumerator\fR and \fIdenominator\fR
are added to the seet of rates on the strip chart using the next free line
color and style.  The data set created will be named \fInumerator_over_denominator\fR.

.nf

stripconfig ?-log 0|1?   ?-timeaxis seconds?

.fi
Configures either or both of the Y axis scale type and the lenght of the time
axis of the strip chart.
If the parameter of the \fI\-log\fR option is 1, the Y axis will intially be a
logarithmically scaled axis.  If 0, the Y axis will be linear.  The \fIseconds\fR
parameter to the \fI-timeaxis\fR option determines the number of seconds of scaler data that will be displayed on
the time axis. The default for these options is to use a linear Y scale and a time axis that is 3600 seconds (1 hour) long.  For additional strip chart configuration options, see the CONFIGURATION section.

.SH CONFIGURATION
.PP
This section describes some advanced configuration techniques.  The key to understanding the advanced this
section is to realize that the scaler display program is just a Tcl/Tk script that is sourced in to a
TclServer interpreter, and that your configuration file is also just a Tcl script that is sourced in
\fIafter\fR the display program script.  As such, any defaults established by the scaler display
program can be overridden by your configuration script.
.TP
Alarm Colors
Three global variables control the three alarm colors. \fBlowColor\fR contains the color to use when displaying
channels in the low alarm state. \fBhiColor\fR contains the color to use when displaying channels in the high alarm
state, and \fBbothColor\fR contains the color used when it is necessary to indicate that both alarm states
are present.   You may modify these colors within your script.  Colors may be specified by name in many cases or by
hexadecimal values.  On linux systems, see the file: /usr/X11R6/lib/X11/rgb.txt for the list of known color names.
Hexadecimal color values are given in any of the following forms:  #RGB #RRGGBB #RRRGGGBBB or #RRRRGGGGBBBB where
R,G,B are hexadecimal digits which, when taken together, form the Red, Green and Blue intensities of the color
respectively.  The two lines below both set the low alarm color to cyan (an equal mixture of Green and Blue):
.nf

   set lowColor cyan
   set lowColor #0ff

.fi
.TP
Tear off pages
The BLT tabset widget in which the scaler pages are displayed supports tear\-off pages.  When enabled, this feature allows you to 'tear off' any page of the notebook into a new top level window.  When the top level window is
deleted, it is returned to the notebook.  This feature and other BLT tabset configuration options can be configured
by using the fact that the notebook widget path is stored in the global variable \fBNotebook\fR.  Thus to enable the
tear\-off functionality the following line can be added to the configuration file:
.nf

  $Notebook configure -tearoff 1

.fi
.TP
Strip chart line styles and colors
Channels on the strip chart widget are assigned line color and style by iterating over a list of colors
and line styles.   The procedure \fBselectElementStyle\fR does this and is expected to return a two element list.
The first element of this list is the color of the line used to draw the element, and the second the argument
to the -dashes configuration option for the element.  You can modify the way in which colors and line styles
are selected either by modifying the values in the color and linestyle list or by just overriding the definition
of the \fBselectElementStyle\fR procedure.

The default implementation of \fBselectElementStyle\fR iterates through a list of colors stored in the global
variable \fBstripColors\fR, selecting linestyles from the dash specifications in the global variable
\fBstripStyles\fR.  When colors are exhausted, the procedure steps to the next line style, resetting the index
into the color list to zero.  The two lines below add the color yellow to the set of colors that can be used to
chart rates (yellow is low contrast relative to the white chart background so it was left off the default list), and a new linestyle where every other pixel is lit with the selected color or is background:
.nf

lappend stripColors yellow
lappend stripStyles [list 1 1]

.fi
.TP
Strip chart configuration
The strip chart widget path is stored in the variable \fBstripchartWidget\fR.  The Widget itself is only created
when the first of \fIstripparam\fR, \fIstripratio\fR or \fIstripconfig\fR command is seen.  You may therefore
only configure the strip chart widget directly after one of these commnds has executed in your configuration file.
You can then use the stripchartWidget variable to configure the strip chart widget arbitrarily.  The example below enables the display of gridlines on the plot surface, and moves the legend to the left side of the plot areea:
.nf

stripconfig -timeaxis 3600;   # Trick to get the widget defined....
$stripchartWidget grid configure -hide 0
$stripchartWidget legend configure -position left

.fi
For more information about how you can configure the stripchart at its elements, see the
BLT stripchart widget documentation.

.SH CALLOUTS
.PP
The scaler script will invoke user written procedures defined in the
configuration script (or scripts sourced by it) at well defined points of the
run.  These callouts can be used to provide functionality not originally
foreseen by the program.

.TP
UserUpdate \-
UserUpdate, if defined, is called by the script whenever it has updated the
displays.  No parameters are passed in to the procedure but several global variables
are useful (see GLOBAL VARIABLES below).

.TP
UserBeginRun \-
UserBeginRun is called at the beginning of a run, if it has been defined. No
parameters are passed.

.TP
UserEndRun \-
UserEndRun, if defined, is called at the end of a run. No parameters are
passed.



.SH "GLOBAL VARIABLES"

The following global variables are useful within user callouts.

.TP
RunNumber \-
   The number of the current run.

.TP
RunTitle \-
   A string contaning the title of the current run.

.TP
Scaler_Totals \-
   An array indexed by scaler channel number containing the
total number of counts in each channel.

.TP
Scaler_Increments \-
   An array indexed by scaler channel number containing the number of counts in
the last time increment (see also ScalerDeltaTime)

.TP
ScalerDletaTime \-
   The number of seconds of counts represented by the Scaler_Increments array
elements.

.TP
ScalerMap
  An array indexed by scaler names.  Each element of this array is the index of
the corresponding scaler.  For example, if you have defined a channel named
.I george,
ScalerMap(george) will be the scaler channel index associated with george.


.SH EXAMPLE(S)
.nf
#
#   Define the scaler channels:
#
#   These can be in any order, I'm just copying the order from the original
#   file.  my preference in fact would be to go in channel order.
#   This is a TCL script with
#    commands 'channel'  - to define a chanel name/buffer position correspondence
#             'page'     - To define a scaler page.
#             'display_single' - To define a single scaler line in a page.
#

#
channel gas.PIN.cfd       0
channel gas.qA.cfd       16
channel gas.qB.cfd       17
channel gas.gC.cfd       18;              # is this a typo in the original file?
channel gas.qD.cfd       19
channel gas.de.cfd        1
channel gas.Ge.cfd        2
channel gas.Ge.cfd_B-OFF 12
channel gas.PS.cfd        5
channel gas.PS.cfd_B-OFF 13
channel I2.SCI.N          3
channel I2.SCI.S          4
channel TA.BaF2           6
channel master.gated     11
channel master.free      10
channel cpu.lam.TO        7
channel clock.gated       9
channel clock.free        8
channel beam.cycle.on    14
channel beam.cycle.off   15

#
#  Next define the pages, their long titles and the tab name
#  and their contents.
#  I've defined the page ALL to be the original page
#  as well as some additional pages so that you can get the
#  idea of how you can use this to organize the display if you want to.
#  If you don't, you can rip out the extra pages.
#
#

page ALL  "Gas Cell DAQ All Scalers"
display_single ALL gas.PIN.cfd
display_ratio  ALL gas.qA.cfd      gas.qB.cfd
display_ratio  ALL gas.gC.cfd      gas.qD.cfd
display_single ALL gas.Ge.cfd
display_ratio  ALL gas.Ge.cfd      gas.Ge.cfd_B-OFF
display_ratio  ALL gas.PS.cfd      gas.PS.cfd_B-OFF
display_ratio  ALL I2.SCI.N        I2.SCI.S
display_single ALL TA.BaF2
display_ratio  ALL master.gated        master.free
display_ratio  ALL cpu.lam.TO          master.gated
display_ratio  ALL clock.gated         clock.free
display_ratio  ALL gasN4.dE.cfd        gasN4.PIN.cfd
display_ratio  ALL beam.cycle.on       beam.cycle.off


# If you only want the first page, then remove all lines
# below here:
#------------------------- cut below here -------------------

#  A second page:
#   Just showing the livetime information  mostly.

page Livetime "Live time information"
display_ratio Livetime  master.gated master.free
display_ratio Livetime  clock.gated  clock.free
display_ratio Livetime  cop.lam.TO   master.gated


#  A third page showing only the gas cell:

page GasCell "Gas cell scalers"


display_single GasCell gas.PIN.cfd
display_ratio  GasCell gas.qA.cfd      gas.qB.cfd
display_ratio  GasCell gas.gC.cfd      gas.qD.cfd
display_single GasCell gas.Ge.cfd
display_ratio  GasCell gas.Ge.cfd      gas.Ge.cfd_B-OFF
display_ratio  GasCell gas.PS.cfd      gas.PS.cfd_B-OFF

# Do a strip chart of the live master rates and the
# Livetime computed by clock.gated/clock.free:

stripparam master.gated
stripratio clock.gated clock.free


.fi


.SH "BUGS AND RESTRICTIONS"
.TP
\-
   This software only available with release 8.0 and later of nscldaq.
.TP
\-
    This software relies on the BLT extension to Tcl/Tk.
.TP
\-
   The startup script for this software requires the TCP/IP server port manager that made its debut with release 8.0 of the software.
.TP
\-
   The BLT stripchart widget used to display rate strip charts requires that channels displayed on it have names
that consist only of letter, digits, underscores an periods.  There are no restrictions on channel names that are
not displayed on the strip chart, however users are encouraged to maintain the BLT restrictions.
