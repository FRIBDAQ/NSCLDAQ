/*!
	\page FileEvents Reacting to file events.

	The class CFileEvent allows an application to react asynchronously to
events on a file.  To use a CFileEvent you will need to:
	- Decide which of the following conditions you need to supply 
          application code for:
	  -# Readbility  (may be significant on e.g. 
   	  -# Writability (may be significant e.g. pipes).
	  -# Exceptional conditions (e.g. pipe broken).
	- Write a subclass of CFile event which supplies the appropriate
	  application specific functionality for any or all of the
	  functions:
	  -# \link CFileEvent::OnReadable OnReadable \endlink which
  	     is called when the file descriptor becomes readable.
	  -# \link CFileEvent::OnWritable OnWritable \endlink which 
	     is called when the file descriptor becomes writable.
	  -# \link CFileEvent::OnException OnException \endlink which
	     is called when the file descriptor has an exceptional condition
	     pending.
	- During application execution create and enable an instance of
	  this class.

In the example below, a file event is created to monitor stdin.  When input is
available on stdin, the first word of the line is echoed back on stdout.

\include subclass.cpp


*/