#!/bin/sh

PATH=/bin:/usr/bin:/usr/local/bin:@prefix@/bin
export PATH

if [ -z "$1" ]; then
  LOOPS=1000
else
  LOOPS=$1
fi

#-----------------------------------------------------------------------
TESTN="007"
TESTDSC="Send/Receive(n) Buffer Object"
TOPDIR="@TOPDIR@"
TESTDIR="$TOPDIR/tests"
TOOLDIR="$TOPDIR/tools"
OUTFNR1="/tmp/test$TESTN""r1.$$"
OUTFNR2="/tmp/test$TESTN""r2.$$"
OUTFNR3="/tmp/test$TESTN""r3.$$"
OUTFNS="/tmp/test$TESTN""s.$$"
PROGR="test$TESTN""r_prog"
PROGS="test$TESTN""s_prog"

TESTFAILED=0
. $TESTDIR/TESTfunclib

#-----------------------------------------------------------------------
SIGOK="used=0 work=0 tused=0 tdel=0"

#-----------------------------------------------------------------------
function getsignature() {
 $TOOLDIR/tsstat | grep DAQLinkThreadMgr | awk -F'(' '{print $2}' | awk -F',' '{print $1,$2,$4,$5}'
}

#-----------------------------------------------------------------------
function testsignature() {
  if [ "$*" == "$SIGOK" ]; then
    echo "0"
  else
    echo "1"
  fi 
}

#-----------------------------------------------------------------------
rm -f $OUTFNR1 $OUTFNR2 $OUTFNR3 $OUTFNS
touch $OUTFNR1 $OUTFNR2 $OUTFNR3 $OUTFNS

println $OUTFNR1 "STAT: Starting test $TESTN \"$TESTDSC\"" 
println $OUTFNR2 "STAT: Starting test $TESTN \"$TESTDSC\"" 
println $OUTFNR3 "STAT: Starting test $TESTN \"$TESTDSC\"" 
println $OUTFNS  "STAT: Starting test $TESTN \"$TESTDSC\"" 
println $OUTFNR1 "STAT: Using output file \"${OUTFNR1}-3:$OUTFNS\""
println $OUTFNS  "STAT: Using output file \"${OUTFNR1}-3:$OUTFNS\""

SIG=`getsignature`
TSIG=`testsignature "$SIG"`

if [ "$TSIG" != "0" ]; then
  println $OUTFNR1 "ERROR: Starting signature \"$SIG\" != \"$SIGOK\""
  println $OUTFNR1 "FAIL: Test $TESTN failed" 
  println $OUTFNR1 "FAIL: See file \"${OUTFNR1}-3:$OUTFNS\" for details"
  exit 1
fi

println $OUTFNR1 "INFO: Starting signature is \"$SIG\""
println $OUTFNS "INFO: Starting signature is \"$SIG\""

START=`getseconds`
($TESTDIR/$PROGR $LOOPS 2>&1 | teeout $OUTFNR1)&
($TESTDIR/$PROGR $LOOPS 2>&1 | teeout $OUTFNR2)&
($TESTDIR/$PROGR $LOOPS 2>&1 | teeout $OUTFNR3)&
sleep 5s
($TESTDIR/$PROGS $LOOPS 2>&1 | teeout $OUTFNS)&
SPID=`readywait $OUTFNS`
RPID1=`readywait $OUTFNR1`
RPID2=`readywait $OUTFNR2`
RPID3=`readywait $OUTFNR3`
STOP=`getseconds`

if [ "$SPID" != "FAIL" ]; then 
  # Sleep to let the server quiesce
  sleep 90s

  SIG=`getsignature`
  TSIG=`testsignature $SIG`

  println $OUTFNS "INFO: Sending signal to $SPID"
  ps $SPID 2>&1 >> $OUTFNS
  kill -TERM $SPID 2>&1 >> $OUTFNS

  println $OUTFNR1 "INFO: Sending signal to $RPID1"
  ps $RPID1 2>&1 >> $OUTFNR1
  kill -TERM $RPID1 2>&1 >> $OUTFNR1

  println $OUTFNR2 "INFO: Sending signal to $RPID2"
  ps $RPID2 2>&1 >> $OUTFNR2
  kill -TERM $RPID2 2>&1 >> $OUTFNR2

  println $OUTFNR3 "INFO: Sending signal to $RPID3"
  ps $RPID3 2>&1 >> $OUTFNR3
  kill -TERM $RPID3 2>&1 >> $OUTFNR3

  if [ "$TSIG" != "0" ]; then
    println $OUTFNR1 "ERROR: Completion signature \"$SIG\" != \"$SIGOK\""
    println $OUTFNR1 "FAIL: Test $TESTN failed" 
    println $OUTFNR1 "FAIL: See file \"${OUTFNR1}-3\" for details"
    exit 1
  fi
fi

TIMESTR=`timestats $START $STOP`
println $OUTFNR1 "STAT: Test ran for $TIMESTR"
printfinalstat $OUTFNR1 $TESTN
println $OUTFNS "STAT: Test ran for $TIMESTR"
printfinalstat $OUTFNS $TESTN

exit 0 
