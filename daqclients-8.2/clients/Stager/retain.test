#  Test suite for the RunRetension package.

set here [file dirname [info script]]

# starting to just get too tough to do this without
# packaging:

set auto_saved $auto_path
lappend auto_path $here
if {[file exists pkgIndex.tcl]} {
    file delete              pkgIndex.tcl.saved
    file rename pkgIndex.tcl pkgIndex.tcl.saved
}
pkg_mkIndex . *.tcl

package require RunRetension
package require StagerConfiguration

#  Test add to pending:

tcltest::test ExpRunRetension-1.0 {ExpRunRetension::AddToPending - good} {
    set ExpRunRetension::PendingRetensions ""

    ExpRunRetension::AddToPending 1
    ExpRunRetension::AddToPending 2
    ExpRunRetension::AddToPending 3

} {1 2 3}

tcltest::test ExpRunRetension-1.1 {ExpRunRetension::AddToPending - bad integer} {
    set ExpRunRetension::PendingRetensions ""

    if {![catch {ExpRunRetension::AddToPending george} msg]} {
        set msg "george added successfully"
    }
    set msg
} ExpRunRetension::NotInteger
tcltest::test ExpRunRetension-1.2 {ExpRunRetension::AddToPending - integer < 0} {
    set ExpRunRetension::PendingRetensions ""

    if {![catch {ExpRunRetension::AddToPending -1} msg]} {
        set msg "Added -1 successfully"
    }
    set msg

} ExpRunRetension::TooSmall

tcltest::test ExpRunRetension-1.3 {ExpRunRetension::AddToPending - duplicate value} {
    set ExpRunRetension::PendingRetensions ""

    ExpRunRetension::AddToPending 5
    if {![catch {ExpRunRetension::AddToPending 5} msg]} {
        set msg "Added duplicate run 5."
    }
    set msg
} ExpRunRetension::DuplicateRun

#  Test ExpRunRetension::ListPending

proc StockRetensionList {} {
    set ExpRunRetension::PendingRetensions ""

    foreach run {3 5 7 9} {
        ExpRunRetension::AddToPending $run
    }

}


tcltest::test ExpRunRetension-2.0 {ExpRunRetension::ListPending} {
    StockRetensionList
    ExpRunRetension::ListPending
} {3 5 7 9}

#  Test remove from pending:

tcltest::test ExpRunRetension-3.0 {ExpRunRetension::RemoveFromPending -first entry} {
    StockRetensionList
    ExpRunRetension::RemoveFromPending 3
    ExpRunRetension::ListPending
} {5 7 9}
tcltest::test ExpRunRetension-3.1 {ExpRunRetension::RemoveFromPending -last entry} {
    StockRetensionList
    ExpRunRetension::RemoveFromPending 9
    ExpRunRetension::ListPending
} {3 5 7}
tcltest::test ExpRunRetension-3.2 {ExpRunRetension::RemoveFromPending -middle entry} {
    StockRetensionList
    ExpRunRetension::RemoveFromPending 5
    ExpRunRetension::ListPending
} {3 7 9}
tcltest::test ExpRunRetension-3.3 {ExpRunRetension::RemoveFromPending - nonexistent entry} {
    StockRetensionList

    if {![catch {ExpRunRetension::RemoveFromPending 2} msg]} {
        set msg "Removed nonexistent run"
    }
    set msg
} ExpRunRetension::NotPending

#  ListRetained : Interfaces to the StagerConfiguration:

tcltest::test ExpRunRetension-4.0 {ExpRunRetension::ListRetained - empty list} {
    StagerConfiguration::setDefaults

    ExpRunRetension::ListRetained
} {}
tcltest::test ExpRunRetension-4.1 {ExpRunRetension::ListRetained - non-empty list} {
    StagerConfiguration::setDefaults
    StagerConfiguration::setRetainList {1 3 5 7}

    ExpRunRetension::ListRetained
} {1 3 5 7}

# isRetained:

tcltest::test ExpRunRetension-5.0 {ExpRunRetension::isRetained - exists} {
    StagerConfiguration::setDefaults
    StagerConfiguration::setRetainList {2 4 6 8}

    ExpRunRetension::isRetained 2
} 1
tcltest::test ExpRunRetension-5.1 {ExpRunRetension::isRetained - does not exist} {
    StagerConfiguration::setDefaults
    StagerConfiguration::setRetainList {11 22 33}

    ExpRunRetension::isRetained 5
} 0
#  Move to retained.

tcltest::test ExpRunRetension-6.0 {ExpRunRetension::MoveToRetained - run exists} {
    StagerConfiguration::setDefaults
    StagerConfiguration::setRetainList {1 2 3}
    set ExpRunRetension::PendingRetensions ""


    ExpRunRetension::AddToPending 4
    ExpRunRetension::AddToPending 5
    ExpRunRetension::AddToPending 6

    ExpRunRetension::MoveToRetained 4

    set result [list [StagerConfiguration::getRetainList] [ExpRunRetension::ListPending]]
} {{1 2 3 4} {5 6}}

tcltest::test ExpRunRetension-6.1 {ExpRunRetension::MoveToRetained - run not pending} {
    StagerConfiguration::setDefaults
    set ExpRunRetension::PendingRetensions ""

    if {![catch {ExpRunRetension::MoveToRetained 64} msg]} {
        set msg {Moving 64 to retained work}
    }
    set msg
} ExpRunRetension::NotPending

# Cleanup

file delete pkgIndex.tcl
if {[file exists pkgIndex.tcl.saved]} {
    file rename pkgIndex.tcl.saved pkgIndex.tcl
}
set auto_path $auto_saved

package forget RunRetension
package forget StagerConfiguration
