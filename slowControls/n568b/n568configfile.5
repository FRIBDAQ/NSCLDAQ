'\"
'\" Copyright (c) 2005 Michigan State University All Rights Reserved
'\"  Licensed under the GPL.  See http://www.gnu.org/licenses/gpl.txt
'\"  terms and conditions.
'\"
'\" The definitions below are for supplemental macros used in Tcl/Tk
'\" manual entries.
'\"
'\" .AP type name in/out ?indent?
'\"	Start paragraph describing an argument to a library procedure.
'\"	type is type of argument (int, etc.), in/out is either "in", "out",
'\"	or "in/out" to describe whether procedure reads or modifies arg,
'\"	and indent is equivalent to second arg of .IP (shouldn't ever be
'\"	needed;  use .AS below instead)
'\"
'\" .AS ?type? ?name?
'\"	Give maximum sizes of arguments for setting tab stops.  Type and
'\"	name are examples of largest possible arguments that will be passed
'\"	to .AP later.  If args are omitted, default tab stops are used.
'\"
'\" .BS
'\"	Start box enclosure.  From here until next .BE, everything will be
'\"	enclosed in one large box.
'\"
'\" .BE
'\"	End of box enclosure.
'\"
'\" .CS
'\"	Begin code excerpt.
'\"
'\" .CE
'\"	End code excerpt.
'\"
'\" .VS ?version? ?br?
'\"	Begin vertical sidebar, for use in marking newly-changed parts
'\"	of man pages.  The first argument is ignored and used for recording
'\"	the version when the .VS was added, so that the sidebars can be
'\"	found and removed when they reach a certain age.  If another argument
'\"	is present, then a line break is forced before starting the sidebar.
'\"
'\" .VE
'\"	End of vertical sidebar.
'\"
'\" .DS
'\"	Begin an indented unfilled display.
'\"
'\" .DE
'\"	End of indented unfilled display.
'\"
'\" .SO
'\"	Start of list of standard options for a Tk widget.  The
'\"	options follow on successive lines, in four columns separated
'\"	by tabs.
'\"
'\" .SE
'\"	End of list of standard options for a Tk widget.
'\"
'\" .OP cmdName dbName dbClass
'\"	Start of description of a specific option.  cmdName gives the
'\"	option's name as specified in the class command, dbName gives
'\"	the option's name in the option database, and dbClass gives
'\"	the option's class in the option database.
'\"
'\" .UL arg1 arg2
'\"	Print arg1 underlined, then print arg2 normally.
'\"
'\" RCS: @(#) $Id$
'\"
'\"	# \fBup traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
'\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1	\\fI\\$2\\fP	(\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
'\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
'\"	# BS - start boxed text
'\"	# ^y = starting y location
'\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
'\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
'\"	# VS - start vertical sidebar
'\"	# ^Y = starting y location
'\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
'\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
'\"	# Special macro to handle page bottom:  finish off current
'\"	# box/sidebar if in box/sidebar mode, then invoked standard
'\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
'\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
'\"	# DE - end display
.de DE
.fi
.RE
.sp
..
'\"	# SO - start of list of standard options
.de SO
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
'\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\fBoptions\\fR manual entry for details on the standard options.
..
'\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
'\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
'\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.de UL
\\$1\l'|0\(ul'\\$2
..
.TH n568configfile 5 "" Tcl "NSCL DAQ Tcl support"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
n568configfile \- Configuration file for loadshaper(1) and n568control(1)
.SH SYNOPSIS
.DS
\fBname
crate
base
nodeid
offset
finegain(\fIi\fB)
polezero(\fIi\fB)
outpolarity(\fIi\fB)
outconfig(\fIi\fB)
shapetime(\fIi\fB)
coarsegain(\fIi\fB)
\fR
.DE
.BE

.SH DESCRIPTION
.PP
The \fBloadshaper(1)\fR and \fBn568control(1)\fR programs rely on cofiguration
files.  A configuration file, known as an N568 configuration file, contains two sets of
information.  Information about the addressing and identification of the module and
information about the module settings.
.PP
When initially connecting to the device, the software uses the identification and connection
information.  When loading settings files, only the settings information is meaningful.  It is thus
possible to use a settings file saved by module \fIA\fR to load the settings for module \fIB\fR.
.PP
N568 configuration files are Tcl scripts that just \fBa bunch of variables and array elements.
Each variable or array element is an identification parameter or a single parameter setting.
.SH "IDENTIFICATION PARAMETERS"
.PP
Identification parameters provide both human and machine readable identification for a shaper.
Humans need to be able to refer to a module by a name that has something to do with its function
in an experiment.   Machines need to know how to form a connection to the module in order to be
able to control it or monitor it.
.PP
The identification parameters are represented by scalar Tcl variables in the N568 configuration file.
Machine readable configuration must specify how to access the CAENnet controller to which the
module is connected as well as the node number of the module on that CAENnet:
.TP
\fBname\fR
A human readable name for the module.  This is for documentation purposes only.
.TP
\fBcrate\fR
The number of the VME crate in which the CAENNet controller to which the module
is connected is installed.
.TP
\fBbase\fR
The VME base address of the CAENNet controller to which the module is connected.
.TP
\fBnodeid\fR
The node number of the module on the CAENnet. This is the two digit number between
0 and 99 inclusive on the front panel of the module.
.SH "SETTINGS PARAMETERS"
.PP
With the exception of the common offset, the N568 has a group of settings for each
of its 16 channels.  The common off\fBis specified by a scalar Tcl variable, while the
channel specific settings are specified by Tcl arrays with numeric indices in the range
0 through 15 respectively, corresponding to the 16 channels of the module.
.TP
\fBoffset\fR
Specifies the commoon ofset in mV.
.TP
\fBfinegain(\fIi\fB)\fR
Specifies the fine gain in arbitrary units from 0 through 255 inclusive.
.TP
\fBpolezero(\fIi\fB)\fR
Specifies the magnitude of the pole 0 correction for the channel in arbitrary units
from 0 through 255 inclusive.
.TP
\fBoutpolarity(\fIi\fB)\fR
Specifies the output polarity. 0 means positive and 1 negative.
.TP
\fBoutconfig(\fIi\fB)\fR
Specifies the output configuration.  0 means direct, while 1 means inverted.
.TP
\fBshapetime(\fIi\fB)\fR
Specifies the shaping time.  This is specified in microseconds and can be any
of the following values: 0.1, 1.0, 3.0 or 6.0.
.TP
\fBcoarsegain(\fIi\fB)\fR
Specifies the coarse gain of the amplifier.  This can be any of the following:
.DS
1
2
4
8
16
32
64
128
.DE


.SH EXAMPLE
.PP
The following is a sample configuration file.
.CS
# N568b configuration file written by n568Control.tcl Wed Nov 09 09:14:10 EST 2005
set name    seeshaper
set crate   0
set base    0x100000
set nodeid  1
set offset 1.00
set finegain(0) 128
set polezero(0) 119
set outpolarity(0) 1
set outconfig(0) 0
set shapetime(0) 1.0
set coarsegain(0) 2.0
set finegain(1) 128
set polezero(1) 128
set outpolarity(1) 0
set outconfig(1) 0
set shapetime(1) 1.0
set coarsegain(1) 2.0
set finegain(2) 128
set polezero(2) 128
set outpolarity(2) 1
set outconfig(2) 0
set shapetime(2) 1.0
set coarsegain(2) 2.0
set finegain(3) 128
set polezero(3) 128
set outpolarity(3) 0
set outconfig(3) 0
set shapetime(3) 1.0
set coarsegain(3) 2.0
set finegain(4) 128
set polezero(4) 119
set outpolarity(4) 1
set outconfig(4) 1
set shapetime(4) 1.0
set coarsegain(4) 2.0
set finegain(5) 128
set polezero(5) 128
set outpolarity(5) 0
set outconfig(5) 0
set shapetime(5) 1.0
set coarsegain(5) 2.0
set finegain(6) 128
set polezero(6) 128
set outpolarity(6) 1
set outconfig(6) 0
set shapetime(6) 1.0
set coarsegain(6) 2.0
set finegain(7) 128
set polezero(7) 128
set outpolarity(7) 1
set outconfig(7) 0
set shapetime(7) 1.0
set coarsegain(7) 2.0
set finegain(8) 128
set polezero(8) 128
set outpolarity(8) 1
set outconfig(8) 0
set shapetime(8) 1.0
set coarsegain(8) 2.0
set finegain(9) 128
set polezero(9) 128
set outpolarity(9) 1
set outconfig(9) 0
set shapetime(9) 1.0
set coarsegain(9) 2.0
set finegain(10) 128
set polezero(10) 128
set outpolarity(10) 1
set outconfig(10) 0
set shapetime(10) 1.0
set coarsegain(10) 2.0
set finegain(11) 128
set polezero(11) 128
set outpolarity(11) 1
set outconfig(11) 0
set shapetime(11) 1.0
set coarsegain(11) 2.0
set finegain(12) 128
set polezero(12) 128
set outpolarity(12) 1
set outconfig(12) 0
set shapetime(12) 1.0
set coarsegain(12) 2.0
set finegain(13) 128
set polezero(13) 128
set outpolarity(13) 1
set outconfig(13) 0
set shapetime(13) 1.0
set coarsegain(13) 2.0
set finegain(14) 128
set polezero(14) 128
set outpolarity(14) 1
set outconfig(14) 0
set shapetime(14) 1.0
set coarsegain(14) 2.0
set finegain(15) 128
set polezero(15) 128
set outpolarity(15) 1
set outconfig(15) 0
set shapetime(15) 1.0
set coarsegain(15) 2.0
.CE


.SH "SEE ALSO"
loadshaper(1) n568Control(1)

.SH KEYWORDS
configuration n568 n568-Gui
