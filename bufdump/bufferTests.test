#----------- Setup environment

set here [file dirname [info script]]

# starting to just get too tough to do this without
# packaging:
package require struct
package require tcltest

set auto_saved $auto_path
set auto_path [concat $here $auto_path]


if {[file exists pkgIndex.tcl]} {
    file delete              pkgIndex.tcl.saved
    file rename pkgIndex.tcl pkgIndex.tcl.saved
}
pkg_mkIndex . *.tcl

package require eventData

#----------- Test utility procs


#
#    pack a title into an 80 char string.
#
proc packTitle {title} {
    set title [string range $title 0 78];    # Must fit.
    if {([string length $title] % 2) == 1} {
        append title " "
    }

    set titleWords [::struct::list repeatn 0 40]
    set word 0
    for {set i 0} {$i < [string length $title]} {incr i 2} {
        set substr [string range $title $i [expr {$i+1}]]
        binary scan $substr s1 value
        set titleWords [lreplace $titleWords $word $word $value]
        incr word
    }
    return $titleWords
}
#
#   Create a control buffer with the indicated type.
#
proc createControlBuffer type {
    set header [makeBufferHeader]
    set header [lreplace $header 0 0 66];           #Body length for control buffers.
    set header [lreplace $header 1 1 $type];        #Buffer type.
    set buffer [concat $header [packTitle "This is a test title"]]
    lappend buffer 1234 0 12 16 2005 16 42 45

    return $buffer
}

#----------- Tests:

tcltest::test 1.0 {Check size of buffer is correctly returned} \
-setup {
    nsclBuffer buffer -buffer [makeBufferHeader]
}                                                             \
-cleanup {
    buffer destroy
}                                                             \
-body {
    buffer usedSize
}                                                              \
-result {16}

::tcltest::test 2.0 {Test numeric type fetching}           \
-setup {
    nsclBuffer buffer -buffer [makeBufferHeader]
}                                                         \
-cleanup {
    buffer destroy
}                                                        \
-body {
    buffer type
}                                                        \
-result {Type 1}

::tcltest::test 2.1 {Test string type fetching}           \
-setup {
    nsclBuffer buffer -buffer [makeBufferHeader]
    buffer addTypeName 1 Events
}                                                       \
-cleanup {
    buffer destroy
}                                                     \
-body {
    buffer type
}                                                     \
-result {Events}


::tcltest::test 3.0 {Get run number}                      \
-setup {
    nsclBuffer buffer -buffer [makeBufferHeader]
}                                                         \
-cleanup {
    buffer destroy
}                                                         \
-body {
    buffer run
}                                                         \
-result 1234

::tcltest::test 4.0 {get the sequence number sequence is 1 0}            \
-setup {
    nsclBuffer buffer -buffer [makeBufferHeader]
}                                                      \
-cleanup {
    buffer destroy
}                                                       \
-body {
    buffer sequence
}                                                      \
-result 1

::tcltest::test 4.1  {get sequence number when it's 0 1}     \
-setup {
    set header [makeBufferHeader]
    set header [lreplace $header 4 5  0 1]
    nsclBuffer buffer -buffer $header
}                                                          \
-cleanup {
    buffer destroy
}                                                            \
-body {
    buffer sequence
}                                                        \
-result {65536}

::tcltest::test 4.2 {get sequence number that's 1 1} \
-setup {
    set header [makeBufferHeader]
    set header [lreplace $header 5 5  1]
    nsclBuffer buffer -buffer $header
}                                                          \
-cleanup {
    buffer destroy
}                                                            \
-body {
    buffer sequence
}                                                        \
-result {65537}

::tcltest::test  5.0 {Entity count}                      \
-setup {
    set header [makeBufferHeader]
    set header [lreplace $header 6 6 100]
    set header [lreplace $header 1 1 12]
    nsclBuffer buffer -buffer $header
}                                                       \
-cleanup {
    buffer destroy
}                                                        \
-body {
    buffer entities
}                                                         \
-result {100}


::tcltest::test 6.0 {get Run time from start buffer}      \
-setup {
    nsclBuffer buffer -buffer [createControlBuffer 11]
}                                                             \
-cleanup {
    buffer destroy
}                                                             \
-body {
    buffer runTime
}                                                            \
-result {1234}

::tcltest::test 6.1 {get run time from scaler buffer}      \
-setup {
    nsclBuffer buffer -buffer [createScalerBuffer]
}                                                      \
-cleanup {
    buffer destroy
}                                                      \
-body {
    buffer runTime
}                                                     \
-result {1234}

::tcltest::test 6.2 {Get run time from buffer that doesn't have one} \
-setup {
    nsclBuffer buffer -buffer [makeBufferHeader]
}                                                       \
-cleanup {
    buffer destroy
}                                                        \
-body {
    buffer runTime
}                                                          \
-result {}

::tcltest::test 7.0 {Get absolute time from a control buffer} \
-setup {
    nsclBuffer buffer -buffer [createControlBuffer 12]
}                                                               \
-cleanup {
    buffer destroy
}                                                             \
-body {
    buffer absoluteTime
}                                                            \
-result {2005-12-16 16:42:45}

::tcltest::test 7.1 {Get absolute time from non-control buffer} \
-setup {
    nsclBuffer buffer -buffer [createScalerBuffer]
}                                                              \
-cleanup {
    buffer destroy
}                                                               \
-body {
    buffer absoluteTime
}                                                            \
-result {}

::tcltest::test 8.0 {get title from control buffer}  \
-setup {
    nsclBuffer buffer -buffer [createControlBuffer 13]
}                                                   \
-cleanup {
    buffer destroy
}                                                   \
-body {
    buffer title
}                                                   \
-result {This is a test title}

::tcltest::test  8.0 {Get title from scaler buffer} \
-setup {
    nsclBuffer buffer -buffer [createScalerBuffer]
}                              \
-cleanup {
    buffer destroy
}                              \
-body {
    buffer title
}                               \
-result {}

::tcltest::test 9.0 {Get entities from a scaler buffer} \
-setup {
    set buffer [createScalerBuffer]
    nsclBuffer buffer -buffer $buffer
}                    \
-cleanup {
    buffer destroy
}                     \
-body {
    set entities [buffer entities]
    for {set i 0} {$i < $entities} {incr i} {
        lappend scalers [buffer getEntity $i]
    }
    set scalers
}                  \
-result {0 1 2 3 4 5 6 7 8 9}

::tcltest::test 9.1 {Get entities from an event buffer}  \
-setup {
    set data [createEventBuffer [list {0 1 2 3 4} {1 2 3 5} {5 4 3 2}]]
    nsclBuffer buffer -buffer $data
}                 \
-cleanup {
    buffer destroy
}                 \
-body {
    set data [list]
    set entities [buffer entities]
    for {set i 0} {$i < $entities} {incr i} {
        lappend data [buffer getEntity $i]
    }
    set data
}                \
-result {{6 0 1 2 3 4} {5 1 2 3 5} {5 5 4 3 2}}

::tcltest::test  9.2 {Get entities from a string buffer} \
-setup {
    set data [createStringBuffer 4 [list {first string} {a second string} {the last string}]]
    nsclBuffer buffer -buffer $data

}             \
-cleanup {
    buffer destroy
}             \
-body {
    set entities [list]
    set count    [buffer entities]

    for {set i 0} {$i < $count} {incr i} {
        lappend entities [buffer getEntity $i]
    }
    set entities
}             \
-result {{first string} {a second string} {the last string}}

::tcltest::test 9.3 {get entities from a non-entity type buffer} \
-setup {
    nsclBuffer buffer -buffer [createControlBuffer 11]
}        \
-cleanup {
    buffer destroy
}        \
-body {
    buffer getEntity 0
}        \
-result {}

::tcltest::test 9.4  {Get an entity that doesn't exist} \
-setup {
    set data [createEventBuffer [list {0 1 2 3 4} {1 2 3 5} {5 4 3 2}]]
    nsclBuffer buffer -buffer $data
}                 \
-cleanup {
    buffer destroy
}                 \
-body {
    set entities [buffer entities]
    buffer getEntity $entities;         # one more than there is.
}                 \
-result {}


::tcltest::test 10.0  {Get interval start time from scaler buffer} \
-setup {
    nsclBuffer buffer -buffer [createScalerBuffer]
}     \
-cleanup {
    buffer destroy
}     \
-body {
    buffer startTime
}     \
-result {1230}

::tcltest::test 10.1   {Get interval stop time from scaler buffer}      \
-setup {
    nsclBuffer buffer -buffer [createScalerBuffer]
} \
-cleanup {
    buffer destroy
} \
-body {
    buffer endTime
} \
-result {1234}


::tcltest::test 10.2   {get interval start time from e.g. control buffer} \
-setup {
    nsclBuffer buffer -buffer [createControlBuffer 0x000b]
} \
-cleanup {
    buffer destroy
} \
-body {
    buffer startTime
} \
-result {}

::tcltest::test  10.3  {get interval stop time from e.g. control buffer} \
-setup {
    nsclBuffer buffer -buffer [createControlBuffer 11]
} \
-cleanup {
    buffer destroy
} \
-body {
    buffer endTime
} \
-result {}



#----------- Test environment cleanup


file delete pkgIndex.tcl
if {[file exists pkgIndex.tcl.saved]} {
    file rename pkgIndex.tcl.saved pkgIndex.tcl
}
set auto_path $auto_saved


tcltest::cleanupTests
