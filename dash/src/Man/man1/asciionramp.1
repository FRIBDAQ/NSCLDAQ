.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.35.
.TH ASCIIONRAMP "1" "February 2006" "asciionramp 1.82" "User Commands"
.SH NAME
asciionramp \- manual page for asciionramp 1.82
.SH SYNOPSIS
.B asciionramp
\fI--packet=PACKET \fR[\fIOPTION\fR]... \fIUSERCOMMAND\fR
.SH DESCRIPTION
Enable the injection of ASCII data into the data stream.  The
asciionramp program enables ASCII output from USERCOMMAND
(scripts or other programs) to be easily injected into the data
stream.  The output of USERCOMMAND is automagically packaged into
well structured records prior to being injected into the data stream.
The essential characteristics of asciionramp are as follows:
.PP
1.  Records appearing on asciionramp's stdin are transfered to
.IP
stdout.
.PP
2.  Once a BEGINRUN record has been read from stdin, the BEGINRUN
.IP
record is written to stdout and USERCOMMAND executed.
USERCOMMAND's stdout is connected to a pipe, enabling asciionramp
to read data produced by USERCOMMAND.  USERCOMMAND's stderr is
also connected to a pipe, enabling asciionramp to read error
messages produced by USERCOMMAND and relay them to asciionramp's
stderr.
.PP
3.  Data produced by USERCOMMAND is automagically packaged into
.IP
records and written to asciionramp's stdout.
.PP
4.  If USERCOMMAND exits and \fB\-\-restart\fR is not specified, asciionramp
.IP
continues reading records from stdin and writing them to stdout.
.PP
5.  If asciionramp's stdin is closed, asciionramp kills USERCOMMAND
.IP
(if necessary) and then exits.
.SH OPTIONS
.TP
\fB\-\-version\fR
Output version information and exit
.TP
\fB\-\-help\fR
Display this help and exit
.TP
\fB\-\-debug\fR=\fISECONDS\fR
Output a debugging command and wait SECONDS
before beginning execution of main loop
.TP
\fB\-\-oneliner\fR
Produce a new record for each line of output
produced by USERCOMMAND and write it to stdout.
.TP
\fB\-\-separator\fR=\fICHARACTER\fR
Collect output from USERCOMMAND until CHARACTER
is received.  The collected output, excluding the
separator, is packaged into a single record and
written to stdout.
.TP
\fB\-\-restart\fR[=\fIRETRIES\fR] (default: infinite restarts)
Restart USERCOMMAND each time it exits.  If RETRIES
is specified, only restart the program RETRIES
times.
.TP
\fB\-\-packet\fR=\fIPACKET\fR
Mandatory.  PACKET can be either a single positive
integer or a symbolic name (e.g., Physics).
Records produced from the output of USERCOMMAND will
be assigned a type of PACKET.
.SH EXAMPLES
.IP
Readout \fB\-\-run\fR=\fI45\fR | asciionramp \fB\-\-packet\fR=\fI104\fR \fB\-\-oneliner\fR timestamp.sh |
.IP
segmenter /evt/data/output
.TP
Inject a time stamp into the data stream.
Each line output by
.IP
timestamp.sh is packaged into a record and written to stdout.
.IP
Readout \fB\-\-run\fR=\fI46\fR | asciionramp \fB\-\-packet\fR=\fI103\fR \fB\-\-restart\fR periodic.sh |
.IP
segmenter /evt/data/output
.IP
Inject periodically produced data into the data stream.
The entire output of periodic.sh is packaged as a single
record and written to stdout.  When periodic.sh terminates,
it is restarted.
.IP
Readout \fB\-\-run\fR=\fI47\fR | asciionramp \fB\-\-packet\fR=\fI105\fR \fB\-\-separator=\fR"\e\ef"
.IP
\fB\-\-restart\fR thresholds.sh | segmenter /evt/data/output
.IP
Collect output from thresholds.sh until a form feed character
is received.  The collected output, excluding the form
feed character, is packaged into a single record and
written to stdout. When thresholds.sh terminates,
it is restarted.
.SH AUTHOR
Written by E. Kasten.
.SH COPYRIGHT
Copyright \(co 2005 by the Board of Trustees of Michigan State University.
You may use this software under the terms of the GNU public license
(GPL).  The terms of this license are described at:
http://www.gnu.org/licenses/gpl.txt
