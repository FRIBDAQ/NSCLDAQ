foldersTree = gFld("<b>Spectrodaq External Event Framework</b>", "", "")
     insDoc(foldersTree, gLnk("spectrodaq client application framework", "", "main.html"))
aux1 = insFld(foldersTree, gFld("File List", "", "files.html"))
       insDoc(aux1, gLnk("BufferEvent.oxy", "", "BufferEvent_8oxy.html"))
       insDoc(aux1, gLnk("CAlarmLogger.cpp", "", "CAlarmLogger_8cpp.html"))
       insDoc(aux1, gLnk("CAlarmLogger.h", "", "CAlarmLogger_8h.html"))
       insDoc(aux1, gLnk("CApplicationRegistry.cpp", "", "CApplicationRegistry_8cpp.html"))
       insDoc(aux1, gLnk("CApplicationRegistry.h", "", "CApplicationRegistry_8h.html"))
       insDoc(aux1, gLnk("CApplicationSerializer.cpp", "", "CApplicationSerializer_8cpp.html"))
       insDoc(aux1, gLnk("CApplicationSerializer.h", "", "CApplicationSerializer_8h.html"))
       insDoc(aux1, gLnk("CArrayBinding.cpp", "", "CArrayBinding_8cpp.html"))
       insDoc(aux1, gLnk("CArrayBinding.h", "", "CArrayBinding_8h.html"))
       insDoc(aux1, gLnk("CAssocArrayBinding.cpp", "", "CAssocArrayBinding_8cpp.html"))
       insDoc(aux1, gLnk("CAssocArrayBinding.h", "", "CAssocArrayBinding_8h.html"))
       insDoc(aux1, gLnk("CBinding.h", "", "CBinding_8h.html"))
       insDoc(aux1, gLnk("CBufferEvent.cpp", "", "CBufferEvent_8cpp.html"))
       insDoc(aux1, gLnk("CBufferEvent.h", "", "CBufferEvent_8h.html"))
       insDoc(aux1, gLnk("CBufferMonitor.cpp", "", "CBufferMonitor_8cpp.html"))
       insDoc(aux1, gLnk("CBufferMonitor.h", "", "CBufferMonitor_8h.html"))
       insDoc(aux1, gLnk("CBufferReactor.cpp", "", "CBufferReactor_8cpp.html"))
       insDoc(aux1, gLnk("CBufferReactor.h", "", "CBufferReactor_8h.html"))
       insDoc(aux1, gLnk("CChangedPredicate.cpp", "", "CChangedPredicate_8cpp.html"))
       insDoc(aux1, gLnk("CChangedPredicate.h", "", "CChangedPredicate_8h.html"))
       insDoc(aux1, gLnk("CClassifiedObjectRegistry.cpp", "", "CClassifiedObjectRegistry_8cpp.html"))
       insDoc(aux1, gLnk("CClassifiedObjectRegistry.h", "", "CClassifiedObjectRegistry_8h.html"))
       insDoc(aux1, gLnk("CConfigurationManager.cpp", "", "CConfigurationManager_8cpp.html"))
       insDoc(aux1, gLnk("CConfigurationManager.h", "", "CConfigurationManager_8h.html"))
       insDoc(aux1, gLnk("CDAQTCLProcessor.cpp", "", "CDAQTCLProcessor_8cpp.html"))
       insDoc(aux1, gLnk("CDAQTCLProcessor.h", "", "CDAQTCLProcessor_8h.html"))
       insDoc(aux1, gLnk("CDuplicateNameException.cpp", "", "CDuplicateNameException_8cpp.html"))
       insDoc(aux1, gLnk("CDuplicateNameException.h", "", "CDuplicateNameException_8h.html"))
       insDoc(aux1, gLnk("CDuplicateSingleton.cpp", "", "CDuplicateSingleton_8cpp.html"))
       insDoc(aux1, gLnk("CDuplicateSingleton.h", "", "CDuplicateSingleton_8h.html"))
       insDoc(aux1, gLnk("CErrnoException.cpp", "", "CErrnoException_8cpp.html"))
       insDoc(aux1, gLnk("CErrnoException.h", "", "CErrnoException_8h.html"))
       insDoc(aux1, gLnk("CEvent.cpp", "", "CEvent_8cpp.html"))
       insDoc(aux1, gLnk("CEvent.h", "", "CEvent_8h.html"))
       insDoc(aux1, gLnk("CEventLoop.cpp", "", "CEventLoop_8cpp.html"))
       insDoc(aux1, gLnk("CEventLoop.h", "", "CEventLoop_8h.html"))
       insDoc(aux1, gLnk("CEventMonitor.cpp", "", "CEventMonitor_8cpp.html"))
       insDoc(aux1, gLnk("CEventMonitor.h", "", "CEventMonitor_8h.html"))
       insDoc(aux1, gLnk("CException.cpp", "", "CException_8cpp.html"))
       insDoc(aux1, gLnk("CException.h", "", "CException_8h.html"))
       insDoc(aux1, gLnk("CFdMonitor.cpp", "", "CFdMonitor_8cpp.html"))
       insDoc(aux1, gLnk("CFdMonitor.h", "", "CFdMonitor_8h.html"))
       insDoc(aux1, gLnk("CFdReactor.cpp", "", "CFdReactor_8cpp.html"))
       insDoc(aux1, gLnk("CFdReactor.h", "", "CFdReactor_8h.html"))
       insDoc(aux1, gLnk("CFileEvent.cpp", "", "CFileEvent_8cpp.html"))
       insDoc(aux1, gLnk("CFileEvent.h", "", "CFileEvent_8h.html"))
       insDoc(aux1, gLnk("CIncompatibleMonitor.cpp", "", "CIncompatibleMonitor_8cpp.html"))
       insDoc(aux1, gLnk("CIncompatibleMonitor.h", "", "CIncompatibleMonitor_8h.html"))
       insDoc(aux1, gLnk("CInterpreterStartup.cpp", "", "CInterpreterStartup_8cpp.html"))
       insDoc(aux1, gLnk("CInterpreterStartup.h", "", "CInterpreterStartup_8h.html"))
       insDoc(aux1, gLnk("CLinkFailedException.cpp", "", "CLinkFailedException_8cpp.html"))
       insDoc(aux1, gLnk("CLinkFailedException.h", "", "CLinkFailedException_8h.html"))
       insDoc(aux1, gLnk("CLocationEvent.cpp", "", "CLocationEvent_8cpp.html"))
       insDoc(aux1, gLnk("CLocationEvent.h", "", "CLocationEvent_8h.html"))
       insDoc(aux1, gLnk("CLocationMonitor.cpp", "", "CLocationMonitor_8cpp.html"))
       insDoc(aux1, gLnk("ClocationMonitor.h", "", "ClocationMonitor_8h.html"))
       insDoc(aux1, gLnk("CLocationMonitor.h", "", "CLocationMonitor_8h.html"))
       insDoc(aux1, gLnk("CLocationReactor.cpp", "", "CLocationReactor_8cpp.html"))
       insDoc(aux1, gLnk("CLocationReactor.h", "", "CLocationReactor_8h.html"))
       insDoc(aux1, gLnk("CLogger.cpp", "", "CLogger_8cpp.html"))
       insDoc(aux1, gLnk("CLogger.h", "", "CLogger_8h.html"))
       insDoc(aux1, gLnk("CMaskedValuePredicate.cpp", "", "CMaskedValuePredicate_8cpp.html"))
       insDoc(aux1, gLnk("CMaskedValuePredicate.h", "", "CMaskedValuePredicate_8h.html"))
       insDoc(aux1, gLnk("CNamedObject.cpp", "", "CNamedObject_8cpp.html"))
       insDoc(aux1, gLnk("CNamedObject.h", "", "CNamedObject_8h.html"))
       insDoc(aux1, gLnk("CNoSuchLinkException.cpp", "", "CNoSuchLinkException_8cpp.html"))
       insDoc(aux1, gLnk("CNoSuchLinkException.h", "", "CNoSuchLinkException_8h.html"))
       insDoc(aux1, gLnk("CNoSuchObjectException.cpp", "", "CNoSuchObjectException_8cpp.html"))
       insDoc(aux1, gLnk("CNoSuchObjectException.h", "", "CNoSuchObjectException_8h.html"))
       insDoc(aux1, gLnk("CObjectRegistry.cpp", "", "CObjectRegistry_8cpp.html"))
       insDoc(aux1, gLnk("CObjectRegistry.h", "", "CObjectRegistry_8h.html"))
       insDoc(aux1, gLnk("configsys.oxy", "", "configsys_8oxy.html"))
       insDoc(aux1, gLnk("CPointerPredicate.cpp", "", "CPointerPredicate_8cpp.html"))
       insDoc(aux1, gLnk("CPointerPredicate.h", "", "CPointerPredicate_8h.html"))
       insDoc(aux1, gLnk("CRangeError.cpp", "", "CRangeError_8cpp.html"))
       insDoc(aux1, gLnk("CRangeError.h", "", "CRangeError_8h.html"))
       insDoc(aux1, gLnk("CReactor.cpp", "", "CReactor_8cpp.html"))
       insDoc(aux1, gLnk("CReactor.h", "", "CReactor_8h.html"))
       insDoc(aux1, gLnk("CRefptr.h", "", "CRefptr_8h.html"))
       insDoc(aux1, gLnk("CRegisteredObject.cpp", "", "CRegisteredObject_8cpp.html"))
       insDoc(aux1, gLnk("CRegisteredObject.h", "", "CRegisteredObject_8h.html"))
       insDoc(aux1, gLnk("CServerConnectionEvent.cpp", "", "CServerConnectionEvent_8cpp.html"))
       insDoc(aux1, gLnk("CServerConnectionEvent.h", "", "CServerConnectionEvent_8h.html"))
       insDoc(aux1, gLnk("CServerInstance.cpp", "", "CServerInstance_8cpp.html"))
       insDoc(aux1, gLnk("CServerInstance.h", "", "CServerInstance_8h.html"))
       insDoc(aux1, gLnk("CServerMonitor.cpp", "", "CServerMonitor_8cpp.html"))
       insDoc(aux1, gLnk("CServerMonitor.h", "", "CServerMonitor_8h.html"))
       insDoc(aux1, gLnk("CSocket.cpp", "", "CSocket_8cpp.html"))
       insDoc(aux1, gLnk("CSocket.h", "", "CSocket_8h.html"))
       insDoc(aux1, gLnk("CStreamIOError.cpp", "", "CStreamIOError_8cpp.html"))
       insDoc(aux1, gLnk("CStreamIOError.h", "", "CStreamIOError_8h.html"))
       insDoc(aux1, gLnk("CTCLInterpreterStartup.cpp", "", "CTCLInterpreterStartup_8cpp.html"))
       insDoc(aux1, gLnk("CTCLInterpreterStartup.h", "", "CTCLInterpreterStartup_8h.html"))
       insDoc(aux1, gLnk("CTCLSynchronizeCommand.cpp", "", "CTCLSynchronizeCommand_8cpp.html"))
       insDoc(aux1, gLnk("CTCLSynchronizeCommand.h", "", "CTCLSynchronizeCommand_8h.html"))
       insDoc(aux1, gLnk("CTCPBadSocketState.cpp", "", "CTCPBadSocketState_8cpp.html"))
       insDoc(aux1, gLnk("CTCPBadSocketState.h", "", "CTCPBadSocketState_8h.html"))
       insDoc(aux1, gLnk("CTCPConnectionFailed.cpp", "", "CTCPConnectionFailed_8cpp.html"))
       insDoc(aux1, gLnk("CTCPConnectionFailed.h", "", "CTCPConnectionFailed_8h.html"))
       insDoc(aux1, gLnk("CTCPConnectionLost.cpp", "", "CTCPConnectionLost_8cpp.html"))
       insDoc(aux1, gLnk("CTCPConnectionLost.h", "", "CTCPConnectionLost_8h.html"))
       insDoc(aux1, gLnk("CTCPNoSuchHost.cpp", "", "CTCPNoSuchHost_8cpp.html"))
       insDoc(aux1, gLnk("CTCPNoSuchHost.h", "", "CTCPNoSuchHost_8h.html"))
       insDoc(aux1, gLnk("CTCPNoSuchService.cpp", "", "CTCPNoSuchService_8cpp.html"))
       insDoc(aux1, gLnk("CTCPNoSuchService.h", "", "CTCPNoSuchService_8h.html"))
       insDoc(aux1, gLnk("CThreadRecursiveMutex.cpp", "", "CThreadRecursiveMutex_8cpp.html"))
       insDoc(aux1, gLnk("CThreadRecursiveMutex.h", "", "CThreadRecursiveMutex_8h.html"))
       insDoc(aux1, gLnk("CTimerEvent.cpp", "", "CTimerEvent_8cpp.html"))
       insDoc(aux1, gLnk("CTimerEvent.h", "", "CTimerEvent_8h.html"))
       insDoc(aux1, gLnk("CTimerMonitor.cpp", "", "CTimerMonitor_8cpp.html"))
       insDoc(aux1, gLnk("CTimerMonitor.h", "", "CTimerMonitor_8h.html"))
       insDoc(aux1, gLnk("CTKInterpreterStartup.cpp", "", "CTKInterpreterStartup_8cpp.html"))
       insDoc(aux1, gLnk("CTKInterpreterStartup.h", "", "CTKInterpreterStartup_8h.html"))
       insDoc(aux1, gLnk("CTypeFreeBinding.h", "", "CTypeFreeBinding_8h.html"))
       insDoc(aux1, gLnk("CVariableBinding.cpp", "", "CVariableBinding_8cpp.html"))
       insDoc(aux1, gLnk("CVariableBinding.h", "", "CVariableBinding_8h.html"))
       insDoc(aux1, gLnk("CXtEventLoop.cpp", "", "CXtEventLoop_8cpp.html"))
       insDoc(aux1, gLnk("CXtEventLoop.h", "", "CXtEventLoop_8h.html"))
       insDoc(aux1, gLnk("EventDriven.oxy", "", "EventDriven_8oxy.html"))
       insDoc(aux1, gLnk("FdMonitorTest.cpp", "", "FdMonitorTest_8cpp.html"))
       insDoc(aux1, gLnk("FileEvents.oxy", "", "FileEvents_8oxy.html"))
       insDoc(aux1, gLnk("histotypes.h", "", "histotypes_8h.html"))
       insDoc(aux1, gLnk("locationmonitor.oxy", "", "locationmonitor_8oxy.html"))
       insDoc(aux1, gLnk("maindocs.oxy", "", "maindocs_8oxy.html"))
       insDoc(aux1, gLnk("Registration.oxy", "", "Registration_8oxy.html"))
       insDoc(aux1, gLnk("ServerEvent.oxy", "", "ServerEvent_8oxy.html"))
       insDoc(aux1, gLnk("SocketEvents.oxy", "", "SocketEvents_8oxy.html"))
       insDoc(aux1, gLnk("SpectroFramework.h", "", "SpectroFramework_8h.html"))
       insDoc(aux1, gLnk("Subclassing.oxy", "", "Subclassing_8oxy.html"))
       insDoc(aux1, gLnk("Synchronization.oxy", "", "Synchronization_8oxy.html"))
       insDoc(aux1, gLnk("TCLApplication.cpp", "", "TCLApplication_8cpp.html"))
       insDoc(aux1, gLnk("TCLApplication.h", "", "TCLApplication_8h.html"))
       insDoc(aux1, gLnk("TCLCommandPackage.cpp", "", "TCLCommandPackage_8cpp.html"))
       insDoc(aux1, gLnk("TCLCommandPackage.h", "", "TCLCommandPackage_8h.html"))
       insDoc(aux1, gLnk("TCLException.cpp", "", "TCLException_8cpp.html"))
       insDoc(aux1, gLnk("TCLException.h", "", "TCLException_8h.html"))
       insDoc(aux1, gLnk("TCLFileHandler.cpp", "", "TCLFileHandler_8cpp.html"))
       insDoc(aux1, gLnk("TCLFileHandler.h", "", "TCLFileHandler_8h.html"))
       insDoc(aux1, gLnk("TCLGuests.oxy", "", "TCLGuests_8oxy.html"))
       insDoc(aux1, gLnk("TCLHashTable.h", "", "TCLHashTable_8h.html"))
       insDoc(aux1, gLnk("TCLHashTableItem.h", "", "TCLHashTableItem_8h.html"))
       insDoc(aux1, gLnk("TCLHashTableIterator.h", "", "TCLHashTableIterator_8h.html"))
       insDoc(aux1, gLnk("TCLIdleProcess.cpp", "", "TCLIdleProcess_8cpp.html"))
       insDoc(aux1, gLnk("TCLIdleProcess.h", "", "TCLIdleProcess_8h.html"))
       insDoc(aux1, gLnk("TCLInterpreter.cpp", "", "TCLInterpreter_8cpp.html"))
       insDoc(aux1, gLnk("TCLInterpreter.h", "", "TCLInterpreter_8h.html"))
       insDoc(aux1, gLnk("TCLInterpreterObject.cpp", "", "TCLInterpreterObject_8cpp.html"))
       insDoc(aux1, gLnk("TCLInterpreterObject.h", "", "TCLInterpreterObject_8h.html"))
       insDoc(aux1, gLnk("TCLList.cpp", "", "TCLList_8cpp.html"))
       insDoc(aux1, gLnk("TCLList.h", "", "TCLList_8h.html"))
       insDoc(aux1, gLnk("TCLObject.cpp", "", "TCLObject_8cpp.html"))
       insDoc(aux1, gLnk("TCLObject.h", "", "TCLObject_8h.html"))
       insDoc(aux1, gLnk("TCLPackagedCommand.h", "", "TCLPackagedCommand_8h.html"))
       insDoc(aux1, gLnk("TCLProcessor.cpp", "", "TCLProcessor_8cpp.html"))
       insDoc(aux1, gLnk("TCLProcessor.h", "", "TCLProcessor_8h.html"))
       insDoc(aux1, gLnk("TCLResult.cpp", "", "TCLResult_8cpp.html"))
       insDoc(aux1, gLnk("TCLResult.h", "", "TCLResult_8h.html"))
       insDoc(aux1, gLnk("TCLString.cpp", "", "TCLString_8cpp.html"))
       insDoc(aux1, gLnk("TCLString.h", "", "TCLString_8h.html"))
       insDoc(aux1, gLnk("TCLTimer.cpp", "", "TCLTimer_8cpp.html"))
       insDoc(aux1, gLnk("TCLTimer.h", "", "TCLTimer_8h.html"))
       insDoc(aux1, gLnk("TCLVariable.cpp", "", "TCLVariable_8cpp.html"))
       insDoc(aux1, gLnk("TCLVariable.h", "", "TCLVariable_8h.html"))
       insDoc(aux1, gLnk("tcpip.oxy", "", "tcpip_8oxy.html"))
       insDoc(aux1, gLnk("TimerEventTest.cpp", "", "TimerEventTest_8cpp.html"))
       insDoc(aux1, gLnk("XMCallback.cpp", "", "XMCallback_8cpp.html"))
       insDoc(aux1, gLnk("XMcallback.cpp", "", "XMcallback_8cpp.html"))
       insDoc(aux1, gLnk("XMCallback.h", "", "XMCallback_8h.html"))
       insDoc(aux1, gLnk("XMDialogs.cpp", "", "XMDialogs_8cpp.html"))
       insDoc(aux1, gLnk("XMDialogs.h", "", "XMDialogs_8h.html"))
       insDoc(aux1, gLnk("XMHelp.cpp", "", "XMHelp_8cpp.html"))
       insDoc(aux1, gLnk("XMLabel.h", "", "XMLabel_8h.html"))
       insDoc(aux1, gLnk("XMList.h", "", "XMList_8h.html"))
       insDoc(aux1, gLnk("XMManagers.cpp", "", "XMManagers_8cpp.html"))
       insDoc(aux1, gLnk("XMManagers.h", "", "XMManagers_8h.html"))
       insDoc(aux1, gLnk("XMMenubar.h", "", "XMMenubar_8h.html"))
       insDoc(aux1, gLnk("XMMenus.cpp", "", "XMMenus_8cpp.html"))
       insDoc(aux1, gLnk("XMMenus.h", "", "XMMenus_8h.html"))
       insDoc(aux1, gLnk("XMPushbutton.h", "", "XMPushbutton_8h.html"))
       insDoc(aux1, gLnk("XMScale.h", "", "XMScale_8h.html"))
       insDoc(aux1, gLnk("XMSeparators.h", "", "XMSeparators_8h.html"))
       insDoc(aux1, gLnk("XMShell.cpp", "", "XMShell_8cpp.html"))
       insDoc(aux1, gLnk("XMShell.h", "", "XMShell_8h.html"))
       insDoc(aux1, gLnk("XMText.h", "", "XMText_8h.html"))
       insDoc(aux1, gLnk("XMWidget.h", "", "XMWidget_8h.html"))
       insDoc(aux1, gLnk("XMWlist.cpp", "", "XMWlist_8cpp.html"))
       insDoc(aux1, gLnk("XMWlist.h", "", "XMWlist_8h.html"))
       insDoc(aux1, gLnk("XtGuests.oxy", "", "XtGuests_8oxy.html"))
aux1 = insFld(foldersTree, gFld("Compound List", "", "annotated.html"))
       insDoc(aux1, gLnk("CAlarmLogger", "", "classCAlarmLogger.html"))
       insDoc(aux1, gLnk("Callback_data", "", "structCallback__data.html"))
       insDoc(aux1, gLnk("CApplicationRegistry", "", "classCApplicationRegistry.html"))
       insDoc(aux1, gLnk("CApplicationSerializer", "", "classCApplicationSerializer.html"))
       insDoc(aux1, gLnk("CArrayBinding", "", "classCArrayBinding.html"))
       insDoc(aux1, gLnk("CAssocArrayBinding", "", "classCAssocArrayBinding.html"))
       insDoc(aux1, gLnk("CBinding", "", "classCBinding.html"))
       insDoc(aux1, gLnk("CBufferEvent", "", "classCBufferEvent.html"))
       insDoc(aux1, gLnk("CBufferEvent::AddLinkRequest", "", "structCBufferEvent_1_1AddLinkRequest.html"))
       insDoc(aux1, gLnk("CBufferEvent::CGenericBufferReactor", "", "classCBufferEvent_1_1CGenericBufferReactor.html"))
       insDoc(aux1, gLnk("CBufferMonitor", "", "classCBufferMonitor.html"))
       insDoc(aux1, gLnk("CBufferReactor", "", "classCBufferReactor.html"))
       insDoc(aux1, gLnk("CChangedPredicate", "", "classCChangedPredicate.html"))
       insDoc(aux1, gLnk("CClassifiedObjectRegistry", "", "classCClassifiedObjectRegistry.html"))
       insDoc(aux1, gLnk("CCommit", "", "classCCommit.html"))
       insDoc(aux1, gLnk("CConfigurationManager", "", "classCConfigurationManager.html"))
       insDoc(aux1, gLnk("CDAQTCLProcessor", "", "classCDAQTCLProcessor.html"))
       insDoc(aux1, gLnk("CDumpBinding", "", "classCDumpBinding.html"))
       insDoc(aux1, gLnk("CDuplicateNameException", "", "classCDuplicateNameException.html"))
       insDoc(aux1, gLnk("CDuplicateSingleton", "", "classCDuplicateSingleton.html"))
       insDoc(aux1, gLnk("CErrnoException", "", "classCErrnoException.html"))
       insDoc(aux1, gLnk("CEvent", "", "classCEvent.html"))
       insDoc(aux1, gLnk("CEventLoop", "", "classCEventLoop.html"))
       insDoc(aux1, gLnk("CEventMonitor", "", "classCEventMonitor.html"))
       insDoc(aux1, gLnk("CException", "", "classCException.html"))
       insDoc(aux1, gLnk("CFdMonitor", "", "classCFdMonitor.html"))
       insDoc(aux1, gLnk("CFdReactor", "", "classCFdReactor.html"))
       insDoc(aux1, gLnk("CFileEvent", "", "classCFileEvent.html"))
       insDoc(aux1, gLnk("CFileEvent::CFileEventReactor", "", "classCFileEvent_1_1CFileEventReactor.html"))
       insDoc(aux1, gLnk("Generic_List", "", "classGeneric__List.html"))
       insDoc(aux1, gLnk("CIncompatibleMonitor", "", "classCIncompatibleMonitor.html"))
       insDoc(aux1, gLnk("CInitBinding", "", "classCInitBinding.html"))
       insDoc(aux1, gLnk("CInterpreterStartup", "", "classCInterpreterStartup.html"))
       insDoc(aux1, gLnk("CLinkFailedException", "", "classCLinkFailedException.html"))
       insDoc(aux1, gLnk("LinkInfo", "", "structLinkInfo.html"))
       insDoc(aux1, gLnk("CLocationEvent", "", "classCLocationEvent.html"))
       insDoc(aux1, gLnk("CLocationEvent::CGenericLocationReactor", "", "classCLocationEvent_1_1CGenericLocationReactor.html"))
       insDoc(aux1, gLnk("CLocationMonitor", "", "classCLocationMonitor.html"))
       insDoc(aux1, gLnk("CLocationReactor", "", "classCLocationReactor.html"))
       insDoc(aux1, gLnk("CLogger", "", "classCLogger.html"))
       insDoc(aux1, gLnk("CMaskedValuePredicate", "", "classCMaskedValuePredicate.html"))
       insDoc(aux1, gLnk("MatchAll", "", "classMatchAll.html"))
       insDoc(aux1, gLnk("MatchURL", "", "classMatchURL.html"))
       insDoc(aux1, gLnk("CNamedObject", "", "classCNamedObject.html"))
       insDoc(aux1, gLnk("CNoSuchLinkException", "", "classCNoSuchLinkException.html"))
       insDoc(aux1, gLnk("CNoSuchObjectException", "", "classCNoSuchObjectException.html"))
       insDoc(aux1, gLnk("CObjectRegistry", "", "classCObjectRegistry.html"))
       insDoc(aux1, gLnk("CPointerPredicate", "", "classCPointerPredicate.html"))
       insDoc(aux1, gLnk("CRangeError", "", "classCRangeError.html"))
       insDoc(aux1, gLnk("CReactor", "", "classCReactor.html"))
       insDoc(aux1, gLnk("CRefcountedPtr", "", "classCRefcountedPtr.html"))
       insDoc(aux1, gLnk("CReferenceCounted", "", "classCReferenceCounted.html"))
       insDoc(aux1, gLnk("CRegisteredObject", "", "classCRegisteredObject.html"))
       insDoc(aux1, gLnk("CServerConnectionEvent", "", "classCServerConnectionEvent.html"))
       insDoc(aux1, gLnk("CServerInstance", "", "classCServerInstance.html"))
       insDoc(aux1, gLnk("CServerMonitor", "", "classCServerMonitor.html"))
       insDoc(aux1, gLnk("Shell", "", "classShell.html"))
       insDoc(aux1, gLnk("CShutdownBinding", "", "classCShutdownBinding.html"))
       insDoc(aux1, gLnk("CSocket", "", "classCSocket.html"))
       insDoc(aux1, gLnk("StartEventThread", "", "classStartEventThread.html"))
       insDoc(aux1, gLnk("CStreamIOError", "", "classCStreamIOError.html"))
       insDoc(aux1, gLnk("CTCLApplication", "", "classCTCLApplication.html"))
       insDoc(aux1, gLnk("CTCLCommandPackage", "", "classCTCLCommandPackage.html"))
       insDoc(aux1, gLnk("CTCLException", "", "classCTCLException.html"))
       insDoc(aux1, gLnk("CTCLFileHandler", "", "classCTCLFileHandler.html"))
       insDoc(aux1, gLnk("CTCLHashTable", "", "classCTCLHashTable.html"))
       insDoc(aux1, gLnk("CTCLHashTableItem", "", "classCTCLHashTableItem.html"))
       insDoc(aux1, gLnk("CTCLHashTableIterator", "", "classCTCLHashTableIterator.html"))
       insDoc(aux1, gLnk("CTCLIdleProcess", "", "classCTCLIdleProcess.html"))
       insDoc(aux1, gLnk("CTCLInterpreter", "", "classCTCLInterpreter.html"))
       insDoc(aux1, gLnk("CTCLInterpreterObject", "", "classCTCLInterpreterObject.html"))
       insDoc(aux1, gLnk("CTCLInterpreterStartup", "", "classCTCLInterpreterStartup.html"))
       insDoc(aux1, gLnk("CTCLList", "", "classCTCLList.html"))
       insDoc(aux1, gLnk("CTCLObject", "", "classCTCLObject.html"))
       insDoc(aux1, gLnk("CTCLPackagedCommand", "", "classCTCLPackagedCommand.html"))
       insDoc(aux1, gLnk("CTCLProcessor", "", "classCTCLProcessor.html"))
       insDoc(aux1, gLnk("CTCLResult", "", "classCTCLResult.html"))
       insDoc(aux1, gLnk("CTCLString", "", "classCTCLString.html"))
       insDoc(aux1, gLnk("CTCLSynchronizeCommand", "", "classCTCLSynchronizeCommand.html"))
       insDoc(aux1, gLnk("CTCLTimer", "", "classCTCLTimer.html"))
       insDoc(aux1, gLnk("CTCLVariable", "", "classCTCLVariable.html"))
       insDoc(aux1, gLnk("CTCPBadSocketState", "", "classCTCPBadSocketState.html"))
       insDoc(aux1, gLnk("CTCPConnectionFailed", "", "classCTCPConnectionFailed.html"))
       insDoc(aux1, gLnk("CTCPConnectionLost", "", "classCTCPConnectionLost.html"))
       insDoc(aux1, gLnk("CTCPNoSuchHost", "", "classCTCPNoSuchHost.html"))
       insDoc(aux1, gLnk("CTCPNoSuchService", "", "classCTCPNoSuchService.html"))
       insDoc(aux1, gLnk("CThreadRecursiveMutex", "", "classCThreadRecursiveMutex.html"))
       insDoc(aux1, gLnk("Time_t", "", "structTime__t.html"))
       insDoc(aux1, gLnk("CTimerEvent", "", "classCTimerEvent.html"))
       insDoc(aux1, gLnk("CTimerEvent::CTimerGenericReactor", "", "classCTimerEvent_1_1CTimerGenericReactor.html"))
       insDoc(aux1, gLnk("CTimerMonitor", "", "classCTimerMonitor.html"))
       insDoc(aux1, gLnk("CTKInterpreterStartup", "", "classCTKInterpreterStartup.html"))
       insDoc(aux1, gLnk("TopLevelShell", "", "classTopLevelShell.html"))
       insDoc(aux1, gLnk("CTypeFreeBinding", "", "classCTypeFreeBinding.html"))
       insDoc(aux1, gLnk("CVariableBinding", "", "classCVariableBinding.html"))
       insDoc(aux1, gLnk("XMApplication", "", "classXMApplication.html"))
       insDoc(aux1, gLnk("XMArrowButton", "", "classXMArrowButton.html"))
       insDoc(aux1, gLnk("XMBulletinBoard", "", "classXMBulletinBoard.html"))
       insDoc(aux1, gLnk("XMButton", "", "classXMButton.html"))
       insDoc(aux1, gLnk("XMButtonList", "", "classXMButtonList.html"))
       insDoc(aux1, gLnk("XMCallback", "", "classXMCallback.html"))
       insDoc(aux1, gLnk("XMCascadeButton", "", "classXMCascadeButton.html"))
       insDoc(aux1, gLnk("XMForm", "", "classXMForm.html"))
       insDoc(aux1, gLnk("XMFrame", "", "classXMFrame.html"))
       insDoc(aux1, gLnk("XMHorizontalSeparator", "", "classXMHorizontalSeparator.html"))
       insDoc(aux1, gLnk("XMLabel", "", "classXMLabel.html"))
       insDoc(aux1, gLnk("XMList", "", "classXMList.html"))
       insDoc(aux1, gLnk("XMListBaseClass", "", "classXMListBaseClass.html"))
       insDoc(aux1, gLnk("XMMainWindow", "", "classXMMainWindow.html"))
       insDoc(aux1, gLnk("XMManagedWidget", "", "classXMManagedWidget.html"))
       insDoc(aux1, gLnk("XMManager", "", "classXMManager.html"))
       insDoc(aux1, gLnk("XMMenuBar", "", "classXMMenuBar.html"))
       insDoc(aux1, gLnk("XMMenuItem", "", "structXMMenuItem.html"))
       insDoc(aux1, gLnk("XMPanedWindow", "", "classXMPanedWindow.html"))
       insDoc(aux1, gLnk("XMPulldown", "", "classXMPulldown.html"))
       insDoc(aux1, gLnk("XMPushButton", "", "classXMPushButton.html"))
       insDoc(aux1, gLnk("XMRowColumn", "", "classXMRowColumn.html"))
       insDoc(aux1, gLnk("XMScale", "", "classXMScale.html"))
       insDoc(aux1, gLnk("XMScrolledList", "", "classXMScrolledList.html"))
       insDoc(aux1, gLnk("XMScrolledText", "", "classXMScrolledText.html"))
       insDoc(aux1, gLnk("XMSeparator", "", "classXMSeparator.html"))
       insDoc(aux1, gLnk("XMText", "", "classXMText.html"))
       insDoc(aux1, gLnk("XMTextField", "", "classXMTextField.html"))
       insDoc(aux1, gLnk("XMToggleButton", "", "classXMToggleButton.html"))
       insDoc(aux1, gLnk("XMVerticalSeparator", "", "classXMVerticalSeparator.html"))
       insDoc(aux1, gLnk("XMWidget", "", "classXMWidget.html"))
       insDoc(aux1, gLnk("XMWidgetList", "", "classXMWidgetList.html"))
       insDoc(aux1, gLnk("CXtEventLoop", "", "classCXtEventLoop.html"))
aux1 = insFld(foldersTree, gFld("Class Hierarchy", "", "hierarchy.html"))
       insDoc(aux1, gLnk("CAlarmLogger", "", "classCAlarmLogger.html"))
       insDoc(aux1, gLnk("Callback_data", "", "structCallback__data.html"))
       insDoc(aux1, gLnk("CApplicationRegistry", "", "classCApplicationRegistry.html"))
       insDoc(aux1, gLnk("CBufferEvent::AddLinkRequest", "", "structCBufferEvent_1_1AddLinkRequest.html"))
       insDoc(aux1, gLnk("CCommit", "", "classCCommit.html"))
       insDoc(aux1, gLnk("CConfigurationManager", "", "classCConfigurationManager.html"))
       insDoc(aux1, gLnk("CDumpBinding", "", "classCDumpBinding.html"))
  aux2 = insFld(aux1, gFld("CEventLoop", "", "classCEventLoop.html"))
    aux3 = insFld(aux2, gFld("CInterpreterStartup", "", "classCInterpreterStartup.html"))
           insDoc(aux3, gLnk("CTCLInterpreterStartup", "", "classCTCLInterpreterStartup.html"))
           insDoc(aux3, gLnk("CTKInterpreterStartup", "", "classCTKInterpreterStartup.html"))
         insDoc(aux2, gLnk("CXtEventLoop", "", "classCXtEventLoop.html"))
  aux2 = insFld(aux1, gFld("CException", "", "classCException.html"))
         insDoc(aux2, gLnk("CDuplicateNameException", "", "classCDuplicateNameException.html"))
         insDoc(aux2, gLnk("CDuplicateSingleton", "", "classCDuplicateSingleton.html"))
    aux3 = insFld(aux2, gFld("CErrnoException", "", "classCErrnoException.html"))
           insDoc(aux3, gLnk("CTCPConnectionFailed", "", "classCTCPConnectionFailed.html"))
           insDoc(aux3, gLnk("CTCPConnectionLost", "", "classCTCPConnectionLost.html"))
           insDoc(aux3, gLnk("CTCPNoSuchService", "", "classCTCPNoSuchService.html"))
         insDoc(aux2, gLnk("CIncompatibleMonitor", "", "classCIncompatibleMonitor.html"))
         insDoc(aux2, gLnk("CLinkFailedException", "", "classCLinkFailedException.html"))
         insDoc(aux2, gLnk("CNoSuchLinkException", "", "classCNoSuchLinkException.html"))
         insDoc(aux2, gLnk("CNoSuchObjectException", "", "classCNoSuchObjectException.html"))
         insDoc(aux2, gLnk("CRangeError", "", "classCRangeError.html"))
         insDoc(aux2, gLnk("CStreamIOError", "", "classCStreamIOError.html"))
         insDoc(aux2, gLnk("CTCLException", "", "classCTCLException.html"))
         insDoc(aux2, gLnk("CTCPBadSocketState", "", "classCTCPBadSocketState.html"))
         insDoc(aux2, gLnk("CTCPNoSuchHost", "", "classCTCPNoSuchHost.html"))
       insDoc(aux1, gLnk("Generic_List", "", "classGeneric__List.html"))
  aux2 = insFld(aux1, gFld("Generic_List< XMWidget >", "", "classGeneric__List.html"))
    aux3 = insFld(aux2, gFld("XMWidgetList", "", "classXMWidgetList.html"))
           insDoc(aux3, gLnk("XMButtonList", "", "classXMButtonList.html"))
       insDoc(aux1, gLnk("CInitBinding", "", "classCInitBinding.html"))
       insDoc(aux1, gLnk("LinkInfo", "", "structLinkInfo.html"))
       insDoc(aux1, gLnk("CLogger", "", "classCLogger.html"))
       insDoc(aux1, gLnk("MatchAll", "", "classMatchAll.html"))
       insDoc(aux1, gLnk("MatchURL", "", "classMatchURL.html"))
  aux2 = insFld(aux1, gFld("CNamedObject", "", "classCNamedObject.html"))
         insDoc(aux2, gLnk("CClassifiedObjectRegistry", "", "classCClassifiedObjectRegistry.html"))
         insDoc(aux2, gLnk("CObjectRegistry", "", "classCObjectRegistry.html"))
    aux3 = insFld(aux2, gFld("CRegisteredObject", "", "classCRegisteredObject.html"))
      aux4 = insFld(aux3, gFld("CEvent", "", "classCEvent.html"))
             insDoc(aux4, gLnk("CBufferEvent", "", "classCBufferEvent.html"))
        aux5 = insFld(aux4, gFld("CFileEvent", "", "classCFileEvent.html"))
               insDoc(aux5, gLnk("CServerConnectionEvent", "", "classCServerConnectionEvent.html"))
               insDoc(aux5, gLnk("CServerInstance", "", "classCServerInstance.html"))
             insDoc(aux4, gLnk("CLocationEvent", "", "classCLocationEvent.html"))
             insDoc(aux4, gLnk("CTimerEvent", "", "classCTimerEvent.html"))
      aux4 = insFld(aux3, gFld("CEventMonitor", "", "classCEventMonitor.html"))
             insDoc(aux4, gLnk("CBufferMonitor", "", "classCBufferMonitor.html"))
        aux5 = insFld(aux4, gFld("CFdMonitor", "", "classCFdMonitor.html"))
               insDoc(aux5, gLnk("CServerMonitor", "", "classCServerMonitor.html"))
             insDoc(aux4, gLnk("CLocationMonitor", "", "classCLocationMonitor.html"))
             insDoc(aux4, gLnk("CTimerMonitor", "", "classCTimerMonitor.html"))
      aux4 = insFld(aux3, gFld("CPointerPredicate", "", "classCPointerPredicate.html"))
             insDoc(aux4, gLnk("CChangedPredicate", "", "classCChangedPredicate.html"))
             insDoc(aux4, gLnk("CMaskedValuePredicate", "", "classCMaskedValuePredicate.html"))
      aux4 = insFld(aux3, gFld("CReactor", "", "classCReactor.html"))
             insDoc(aux4, gLnk("CBufferReactor", "", "classCBufferReactor.html"))
        aux5 = insFld(aux4, gFld("CBufferReactor< U >", "", "classCBufferReactor.html"))
               insDoc(aux5, gLnk("CBufferEvent::CGenericBufferReactor", "", "classCBufferEvent_1_1CGenericBufferReactor.html"))
        aux5 = insFld(aux4, gFld("CFdReactor", "", "classCFdReactor.html"))
               insDoc(aux5, gLnk("CFileEvent::CFileEventReactor", "", "classCFileEvent_1_1CFileEventReactor.html"))
             insDoc(aux4, gLnk("CLocationReactor", "", "classCLocationReactor.html"))
        aux5 = insFld(aux4, gFld("CLocationReactor< U >", "", "classCLocationReactor.html"))
               insDoc(aux5, gLnk("CLocationEvent::CGenericLocationReactor", "", "classCLocationEvent_1_1CGenericLocationReactor.html"))
             insDoc(aux4, gLnk("CTimerEvent::CTimerGenericReactor", "", "classCTimerEvent_1_1CTimerGenericReactor.html"))
       insDoc(aux1, gLnk("CRefcountedPtr", "", "classCRefcountedPtr.html"))
       insDoc(aux1, gLnk("CReferenceCounted", "", "classCReferenceCounted.html"))
       insDoc(aux1, gLnk("CShutdownBinding", "", "classCShutdownBinding.html"))
       insDoc(aux1, gLnk("CSocket", "", "classCSocket.html"))
       insDoc(aux1, gLnk("StartEventThread", "", "classStartEventThread.html"))
       insDoc(aux1, gLnk("CTCLHashTable", "", "classCTCLHashTable.html"))
       insDoc(aux1, gLnk("CTCLHashTableItem", "", "classCTCLHashTableItem.html"))
       insDoc(aux1, gLnk("CTCLHashTableIterator", "", "classCTCLHashTableIterator.html"))
       insDoc(aux1, gLnk("CTCLInterpreter", "", "classCTCLInterpreter.html"))
  aux2 = insFld(aux1, gFld("CTCLInterpreterObject", "", "classCTCLInterpreterObject.html"))
         insDoc(aux2, gLnk("CTCLApplication", "", "classCTCLApplication.html"))
         insDoc(aux2, gLnk("CTCLCommandPackage", "", "classCTCLCommandPackage.html"))
         insDoc(aux2, gLnk("CTCLException", "", "classCTCLException.html"))
         insDoc(aux2, gLnk("CTCLFileHandler", "", "classCTCLFileHandler.html"))
         insDoc(aux2, gLnk("CTCLList", "", "classCTCLList.html"))
         insDoc(aux2, gLnk("CTCLObject", "", "classCTCLObject.html"))
    aux3 = insFld(aux2, gFld("CTCLProcessor", "", "classCTCLProcessor.html"))
      aux4 = insFld(aux3, gFld("CDAQTCLProcessor", "", "classCDAQTCLProcessor.html"))
             insDoc(aux4, gLnk("CTCLSynchronizeCommand", "", "classCTCLSynchronizeCommand.html"))
           insDoc(aux3, gLnk("CTCLPackagedCommand", "", "classCTCLPackagedCommand.html"))
         insDoc(aux2, gLnk("CTCLResult", "", "classCTCLResult.html"))
    aux3 = insFld(aux2, gFld("CTCLTimer", "", "classCTCLTimer.html"))
           insDoc(aux3, gLnk("CTCLIdleProcess", "", "classCTCLIdleProcess.html"))
         insDoc(aux2, gLnk("CTCLVariable", "", "classCTCLVariable.html"))
       insDoc(aux1, gLnk("CTCLString", "", "classCTCLString.html"))
  aux2 = insFld(aux1, gFld("CThreadRecursiveMutex", "", "classCThreadRecursiveMutex.html"))
         insDoc(aux2, gLnk("CApplicationSerializer", "", "classCApplicationSerializer.html"))
       insDoc(aux1, gLnk("Time_t", "", "structTime__t.html"))
  aux2 = insFld(aux1, gFld("CTypeFreeBinding", "", "classCTypeFreeBinding.html"))
    aux3 = insFld(aux2, gFld("CBinding", "", "classCBinding.html"))
           insDoc(aux3, gLnk("CArrayBinding", "", "classCArrayBinding.html"))
           insDoc(aux3, gLnk("CAssocArrayBinding", "", "classCAssocArrayBinding.html"))
           insDoc(aux3, gLnk("CVariableBinding", "", "classCVariableBinding.html"))
       insDoc(aux1, gLnk("XMApplication", "", "classXMApplication.html"))
       insDoc(aux1, gLnk("XMCallback", "", "classXMCallback.html"))
       insDoc(aux1, gLnk("XMMenuItem", "", "structXMMenuItem.html"))
  aux2 = insFld(aux1, gFld("XMWidget", "", "classXMWidget.html"))
    aux3 = insFld(aux2, gFld("Shell", "", "classShell.html"))
           insDoc(aux3, gLnk("TopLevelShell", "", "classTopLevelShell.html"))
    aux3 = insFld(aux2, gFld("XMListBaseClass", "", "classXMListBaseClass.html"))
           insDoc(aux3, gLnk("XMList", "", "classXMList.html"))
           insDoc(aux3, gLnk("XMScrolledList", "", "classXMScrolledList.html"))
    aux3 = insFld(aux2, gFld("XMManagedWidget", "", "classXMManagedWidget.html"))
      aux4 = insFld(aux3, gFld("XMButton", "", "classXMButton.html"))
             insDoc(aux4, gLnk("XMArrowButton", "", "classXMArrowButton.html"))
             insDoc(aux4, gLnk("XMCascadeButton", "", "classXMCascadeButton.html"))
             insDoc(aux4, gLnk("XMPushButton", "", "classXMPushButton.html"))
             insDoc(aux4, gLnk("XMToggleButton", "", "classXMToggleButton.html"))
           insDoc(aux3, gLnk("XMLabel", "", "classXMLabel.html"))
           insDoc(aux3, gLnk("XMMenuBar", "", "classXMMenuBar.html"))
           insDoc(aux3, gLnk("XMPulldown", "", "classXMPulldown.html"))
           insDoc(aux3, gLnk("XMScale", "", "classXMScale.html"))
      aux4 = insFld(aux3, gFld("XMText", "", "classXMText.html"))
             insDoc(aux4, gLnk("XMScrolledText", "", "classXMScrolledText.html"))
           insDoc(aux3, gLnk("XMTextField", "", "classXMTextField.html"))
    aux3 = insFld(aux2, gFld("XMManager", "", "classXMManager.html"))
      aux4 = insFld(aux3, gFld("XMBulletinBoard", "", "classXMBulletinBoard.html"))
             insDoc(aux4, gLnk("XMForm", "", "classXMForm.html"))
           insDoc(aux3, gLnk("XMFrame", "", "classXMFrame.html"))
           insDoc(aux3, gLnk("XMMainWindow", "", "classXMMainWindow.html"))
           insDoc(aux3, gLnk("XMPanedWindow", "", "classXMPanedWindow.html"))
           insDoc(aux3, gLnk("XMRowColumn", "", "classXMRowColumn.html"))
    aux3 = insFld(aux2, gFld("XMSeparator", "", "classXMSeparator.html"))
           insDoc(aux3, gLnk("XMHorizontalSeparator", "", "classXMHorizontalSeparator.html"))
           insDoc(aux3, gLnk("XMVerticalSeparator", "", "classXMVerticalSeparator.html"))
     insDoc(foldersTree, gLnk("Compound Members", "", "functions.html"))
aux1 = insFld(foldersTree, gFld("Namespace List", "", "namespaces.html"))
       insDoc(aux1, gLnk("std", "", "namespacestd.html"))
     insDoc(foldersTree, gLnk("File Members", "", "globals.html"))
aux1 = insFld(foldersTree, gFld("Related Pages", "", "pages.html"))
       insDoc(aux1, gLnk("Buffer arrival events", "", "BufferEvent.html"))
       insDoc(aux1, gLnk("Configuration subsystem", "", "configsys.html"))
       insDoc(aux1, gLnk("Event Driven Programming model", "", "EventDriven.html"))
       insDoc(aux1, gLnk("Reacting to file events.", "", "FileEvents.html"))
       insDoc(aux1, gLnk("Location monitors.", "", "LocationMonitors.html"))
       insDoc(aux1, gLnk("TCL/Tk Guest event loops.", "", "TCLGuests.html"))
       insDoc(aux1, gLnk("Object Registries names and descriptions.", "", "Registration.html"))
       insDoc(aux1, gLnk("Server accept events.", "", "ServerEvent.html"))
       insDoc(aux1, gLnk("Server Instance events.", "", "SocketEvents.html"))
       insDoc(aux1, gLnk("Sub-classing in object frameworks", "", "Subclassing.html"))
       insDoc(aux1, gLnk("Guest event loop synchronization", "", "Synchronization.html"))
       insDoc(aux1, gLnk("TCP/IP client server programming", "", "TCPIP.html"))
       insDoc(aux1, gLnk("Xt/X11 event loops.", "", "XtGuests.html"))
       insDoc(aux1, gLnk("Bug List", "", "bug.html"))
