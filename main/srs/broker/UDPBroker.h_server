#ifndef UDPBROKER_H
#define UDPBROKER_H

#include <CUDPServer.h>
// #include <CDataSinkFactory.h>
#include <CDataSink.h>
// #include <DataFormat.h>
#include <CRingItem.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <iostream>
#include <string>
#include <memory>

class UDPBroker {
public:
    // UDPBroker(int port, std::string sinkType, int sid = -1);
    UDPBroker();
    ~UDPBroker ();

    void initialize(int port, std::string sinkType, int sid = -1);
    void run();
    void stop();

private:
    void mainLoop();

    std::unique_ptr<CRingItem> makeRingItem(in_addr_t from, short port, int sid, void* datagram, size_t nBytes);
    // void usage(const char* msg);

    bool m_stopMainLoop;
    int m_port;
    std::string m_sinkType;
    int m_sid;
    std::unique_ptr<UDP::CUDPServer> m_server;
    std::unique_ptr<CDataSink> m_dataSink;
};

#endif