#!/bin/sh
# -*- tcl -*-
# The next line is executed by /bin/sh, but not tcl \
exec tclsh "$0" ${1+"$@"}

#    This software is Copyright by the Board of Trustees of Michigan
#    State University (c) Copyright 2014.
#
#    You may use this software under the terms of the GNU public license
#    (GPL).  The terms of this license are described at:
#
#     http://www.gnu.org/licenses/gpl.txt
#
#    Authors:
#             Ron Fox
#             Giordano Cerriza
#	     NSCL
#	     Michigan State University
#	     East Lansing, MI 48824-1321


##
# @file   loggerdb.test
# @brief  Test the logger database management functions.
# @author Ron Fox <fox@nscl.msu.edu>
#
package require tcltest
package require eventloggers
package require containers
package require sqlite3

set dbFile ""
set dbFd   -1
proc commonSetup { } {
    set ::dbFd [file tempfile ::dbFile]
    exec [file join $::env(DAQBIN) mg_mkconfig] $::dbFile
    sqlite3 db $::dbFile

}
proc commonCleanup {} {
    close $::dbFd
    db close
    file delete $::dbFile   
}

#------------------------------------------------------------------------------
#  Tests ::eventloggers::add  - add an event logger.

tcltest::test add_1 {Successful simple add adds an entry} \
-setup {
    commonSetup
    ::eventloggers::add db \
        /usr/opt/daq/12.0-000 tcp://localhost/ring genesis ~/stagearea \
        [dict create]
} \
-cleanup {
    commonCleanup
} \
-body {
    db eval {
        select COUNT(*) FROM logger
    }
    
} \
-result 1

tcltest::test add_2 {Does add put non dict stuff in the right place?} \
-setup {
    commonSetup
    set id [::eventloggers::add db \
        /usr/opt/daq/12.0-000 tcp://localhost/ring genesis ~/stagearea \
        [dict create]]
} \
-cleanup {
    commonCleanup
} \
-body {
    db eval {
        SELECT daqroot, ring, host, destination FROM logger WHERE id=$id
    }
} -result [list /usr/opt/daq/12.0-000 tcp://localhost/ring genesis ~/stagearea]

tcltest::test add_3 {Default options get set properly} \
-setup {
    commonSetup
    set id [::eventloggers::add db \
        /usr/opt/daq/12.0-000 tcp://localhost/ring genesis ~/stagearea \
        [dict create]]
} \
-cleanup {
    commonCleanup
} \
-body {
    db eval {
        SELECT partial, critical, enabled, container_id
        FROM logger WHERE id=$id
    }
} -result [list 0 1 1 -1]

tcltest::test add_4 {I can override the default options properly} \
-setup {
    commonSetup
    ::container::add db AContainer ~/minimal.img "" ""
    set id [::eventloggers::add db \
        /usr/opt/daq/12.0-000 tcp://localhost/ring genesis ~/stagearea \
        [dict create container AContainer critical 0 partial 1 enabled 0]]
} \
-cleanup {
    commonCleanup
} \
-body {
    db eval {
        SELECT partial, critical, enabled, container_id
        FROM logger WHERE id=$id
    }
} -result [list 1 0 0 1]

tcltest::test add_5 {Can't use same destination 2x.} \
-setup {
    commonSetup
    set id [::eventloggers::add db \
        /usr/opt/daq/12.0-000 tcp://localhost/ring genesis ~/stagearea \
        [dict create]]
} \
-cleanup {
    commonCleanup
} \
-body {
    eventloggers::add db /usr/opt/daq/12.0-000 tcp://locahost/ring genesis \
        ~/stagearea [dict create]
} -result * -match glob -returnCodes error

#----------------------------------------------------

proc tcltest::cleanupTestHook {} {
    variable numTests
    set ::exitCode [expr {$numTests(Failed) > 0}]
}


tcltest::cleanupTestHook
tcltest::cleanupTests
exit $::exitCode