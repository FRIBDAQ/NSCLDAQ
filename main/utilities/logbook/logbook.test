#!/bin/sh
# -*- tcl -*-
# The next line is executed by /bin/sh, but not tcl \
exec tclsh "$0" ${1+"$@"}

#    This software is Copyright by the Board of Trustees of Michigan
#    State University (c) Copyright 2014.
#
#    You may use this software under the terms of the GNU public license
#    (GPL).  The terms of this license are described at:
#
#     http://www.gnu.org/licenses/gpl.txt
#
#    Authors:
#             Ron Fox
#             Giordano Cerriza
#	     NSCL
#	     Michigan State University
#	     East Lansing, MI 48824-1321


##
# @file   logbook.test
# @brief  Test logbook::logbook command subcommands
# @author Ron Fox <fox@nscl.msu.edu>
#
package require tcltest
package require logbook
package require sqlite3

tcltest::test base_command {Check that the command is defined.} \
-setup {
    
} \
-cleanup {
    
} \
-body {
    info command logbook::logbook
} \
-result {::logbook::logbook}

tcltest::test nosubcommand {Error if not subcommand} \
-setup {} -cleanup {} \
-body {
    catch logbook::logbook
} -result 1


tcltest::test create_1 {Create command requires sufficient params} \
-setup {} -cleanup {} \
-body {
    catch {logbook::logbook create test.db 0400x {Ron Fox}}
} -result 1

tcltest::test create_2 {successful creation} \
-setup {} \
-cleanup {
    file delete test.logbook.db
} \
-body {
    logbook::logbook create test.logbook.db 0400x {Ron Fox} {Testing package}
    file exists test.logbook.db
} -result 1

tcltest::test create_3 {create populates properly} \
-setup {} \
-cleanup {
    file delete test.logbook.db
} \
-body {
    logbook::logbook create test.logbook.db 0400x {Ron Fox} {Testing package}
    sqlite3 db test.logbook.db
    set result [list]
    foreach key [list experiment spokesperson  purpose version] {
        db eval {SELECT value FROM kvstore WHERE key=$key} {
            lappend result $value
        }
    }
    db close
    set result
} -result [list 0400x {Ron Fox} {Testing package} {1.0}]

tcltest::test create_4 {too many parameters to create} \
-setup {} -cleanup {} \
-body {
    catch {logbook::logbook create test.logbook.db 0400x {ron fox} {Testing package} extra}
} -result 1


tcltest::test open_1 {Too few parameters to open} \
-setup {} -cleanup {} \
-body {
    catch {logbook::logbook open}
} -result 1


tcltest::test open_2 {No such database} \
-setup {} -cleanup {} \
-body {
    catch {logbook::logbook open test.logbook.db.nosuch}
} -result 1

tcltest::test open_3 {Database exists and opening it creates a command} \
-setup {
    logbook::logbook create test.logbook.db 0400x {Ron Fox} {Testing Tcl wrappers}
} \
-cleanup {
    file delete test.logbook.db
} -body {
    set logbook [logbook::logbook open test.logbook.db]
    expr {[info command $logbook] ne ""}
} -result 1

tcltest::test open_4 {too many parameters} \
-setup {
    logbook::logbook create test.logbook.db 0400x {Ron Fox} {Testing Tcl wrappers}
} \
-cleanup {
    file delete test.logbook.db
} -body {
    catch {logbook::logbook open test.logbook.db junnk}
} -result 1


#----------------------------------------------------

proc tcltest::cleanupTestHook {} {
    varible numTests
    set ::exitCode [expr {$numTests(Failed) > 0}]
}



tcltest::cleanupTests