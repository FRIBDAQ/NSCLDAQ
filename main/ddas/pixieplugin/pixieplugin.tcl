#!/bin/sh
# -*- tcl -*-
# The next line is executed by /bin/sh, but not tcl \
exec tclsh "$0" ${1+"$@"}

#    This software is Copyright by the Board of Trustees of Michigan
#    State University (c) Copyright 2014.
#
#    You may use this software under the terms of the GNU public license
#    (GPL).  The terms of this license are described at:
#
#     http://www.gnu.org/licenses/gpl.txt
#
#    Authors:
#             Ron Fox
#             Giordano Cerriza
#	     NSCL
#	     Michigan State University
#	     East Lansing, MI 48824-1321


##
# @file pixieplugin.in
# @brief Configure file input for Pixie16 server plugin in DDAS Readouts.
# @author Ron Fox <fox@nscl.msu.edu>
# @note - normally this gets incorporated in to the DDASReadout* via
#         --init-script
#

#  Pull in information about where things are generated by autconf.
#  doing it this way minimizes the nasty thing where editing this file
#  requires configuration to regenerate these defs.

set here [file dirname [info script]]
source [file join $here definitions.tcl]

#
#  Add the TclLibs for NSCLDAQ and DDAS to the auto search path then
#  we can require the port manager and pixieserver packages.
#  @note this directory must havea a pxisys.ini and cfgPixie16.txt file.
#         else the pixieserver package will fail to load.
#
set DDASTclPackages [file join $DDAS_INSTDIR TclLibs]
set DAQTclPackages  [file join $DAQ_INSTDIR TclLibs]

lappend auto_path $DDASTclPackages $DAQTclPackages
<<<<<<< HEAD

=======
package require removetcllibpath
>>>>>>> origin/12.0-pre5
package require pixieserver
package require portAllocator
package provide pixieplugin 1.0



##
#  open up a namespace so we  don't pollute the Tcl environment of the
#  Readout program.
#

namespace eval ReadoutPixieServer {
    ##
    # _onConnection
    #   Handle a new connection.
    # @param socket - socket connected to the client.
    # @param client - Client system.
    # @param port   - Pport connected.
    #
    proc _onConnection {socket client port} {
        puts "Pixie16 server client $client connected"
        Pixie16Server %AUTO% -socket $socket
    }
    ##
    #  Get a port publishing the service as pixie16config
    #
    #
    
    set alloc [::portAllocator create pm]
<<<<<<< HEAD
    set port [$alloc allocatePort pixe16config]    
=======
    set port [$alloc allocatePort pixie16config]    
>>>>>>> origin/12.0-pre5
    
    socket -server ::ReadoutPixieServer::_onConnection  $::ReadoutPixieServer::port
}
