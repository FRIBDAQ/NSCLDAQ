@VERSION
asciionramp 1.82

Copyright (C) 2005 by the Board of Trustees of Michigan State University.
You may use this software under the terms of the GNU public license
(GPL).  The terms of this license are described at:
http://www.gnu.org/licenses/gpl.txt

Written by E. Kasten.
@HELP
Enable the injection of ASCII data into the data stream.  The
asciionramp program enables ASCII output from USERCOMMAND
(scripts or other programs) to be easily injected into the data 
stream.  The output of USERCOMMAND is automagically packaged into
well structured records prior to being injected into the data stream.
The essential characteristics of asciionramp are as follows:

1.  Records appearing on asciionramp's stdin are transfered to
    stdout.

2.  Once a BEGINRUN record has been read from stdin, the BEGINRUN
    record is written to stdout and USERCOMMAND executed.  
    USERCOMMAND's stdout is connected to a pipe, enabling asciionramp
    to read data produced by USERCOMMAND.  USERCOMMAND's stderr is
    also connected to a pipe, enabling asciionramp to read error
    messages produced by USERCOMMAND and relay them to asciionramp's
    stderr.

3.  Data produced by USERCOMMAND is automagically packaged into
    records and written to asciionramp's stdout.

4.  If USERCOMMAND exits and --restart is not specified, asciionramp
    continues reading records from stdin and writing them to stdout.

5.  If asciionramp's stdin is closed, asciionramp kills USERCOMMAND
    (if necessary) and then exits.

Usage: asciionramp --packet=PACKET [OPTION]... USERCOMMAND

Options:
  --version         Output version information and exit     
  --help            Display this help and exit
  --debug=SECONDS   Output a debugging command and wait SECONDS
                        before beginning execution of main loop

  --oneliner        Produce a new record for each line of output
                    produced by USERCOMMAND and write it to stdout.

  --separator=CHARACTER  Collect output from USERCOMMAND until CHARACTER
                    is received.  The collected output, excluding the
                    separator, is packaged into a single record and
                    written to stdout. 

  --restart[=RETRIES] (default: infinite restarts)
                    Restart USERCOMMAND each time it exits.  If RETRIES
                    is specified, only restart the program RETRIES
                    times.  

  --packet=PACKET   Mandatory.  PACKET can be either a single positive 
                    integer or a symbolic name (e.g., Physics).  
                    Records produced from the output of USERCOMMAND will
                    be assigned a type of PACKET.
                    
Examples:
  Readout --run=45 | asciionramp --packet=104 --oneliner timestamp.sh |
               segmenter /evt/data/output
          Inject a time stamp into the data stream.  Each line output by
          timestamp.sh is packaged into a record and written to stdout.

  Readout --run=46 | asciionramp --packet=103 --restart periodic.sh |
               segmenter /evt/data/output
          Inject periodically produced data into the data stream.  
          The entire output of periodic.sh is packaged as a single
          record and written to stdout.  When periodic.sh terminates,
          it is restarted.

  Readout --run=47 | asciionramp --packet=105 --separator="\\f" 
               --restart thresholds.sh | segmenter /evt/data/output
          Collect output from thresholds.sh until a form feed character
          is received.  The collected output, excluding the form 
          feed character, is packaged into a single record and 
          written to stdout. When thresholds.sh terminates,
          it is restarted.

