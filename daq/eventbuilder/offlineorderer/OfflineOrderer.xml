<!-- chapter frameworks -->

<chapter>
  <title>Offline Event Builder and Orderer</title>
  <section>
    <title>Overview</title>


    <para>
      The offline event builder and orderer is a repackaging of the online event builder for use on data that has already been written to disk. It enables the user to stream a run file through an event builder and write the output to disk.
    </para>

    <para>
      The Offline Event Builder and Orderer effectively takes a built event file, separates the built events into individual fragments, pushes all of the fragments through an ordering stage and a potential correlation stage, and ultimately writes the output to disk. The outputted file will be formatted similar to the original file but with the proper ordering of fragments and likely a different correlation window. By default, the correlation stage is disabled such that the behavior will be to order the fragment and write them uncorrelated to disk. It is the user's responsibility to enable the correlation stage and specify the correlation window when setting up their job(s).
    </para>

    <para>
      As a side note, one of the side effects of processing a file containing ring items that originally lacked body headers is that the newly reordered and built stream will be written with the body headers added using the info provided by the user during configuration. 
    </para>



    <section>
      <title>Reasons to use this software</title>
    <para>
      The offline orderer and event builder is aimed at addressing two needs:
    </para>

    <orderedlist>
      <listitem>
        <para>Fixing out of order fragments caused by a late fragment error during an online experiment.</para>
      </listitem>

      <listitem>
        <para>Rebuilding already built data using a different correlation time.</para>
      </listitem>

      <listitem>
        <para>
          Inserting body headers into a file that were missing for non-PHYSICS_EVENT items from a single source. It is important to know that this will treat all data without body headers identically, so if there were more than two data sources that were missing body headers, this will not work quite as expected because the two previously separate data streams will be treated as 1. It will fail.
        </para>
      </listitem>
    </orderedlist>

    <para>
      Performing either of the above two tasks is possible by creating some command pipelines at the terminal but this program abstracts away a lot of the details and allows the user to accomplish his/her task through a simplified interface.
    </para>
    </section>

    <section>
      <title>Limitations</title>

      <orderedlist>
        <listitem id="OffEVB_limit1">
          <para>Unable to reorder or correlate data more than one event builder stage deep. In other words, if the disordered data occurs in the first stage of event building when the data were written to disk following multiple stages, fixing the problem will require first splitting the data apart using a filter program before running it through this software. This is a much more complicated business. </para>
        </listitem>

        <listitem>
          <para>Processing the data for the same run with different correlation windows cannot be performed in a single processing run. Doing so requires using a different stagearea directory for each set of correlation parameters.</para>
        </listitem>

        <listitem>
        <para>
          <emphasis>Data files that were written with more than one data source missing body headers cannot be handled with this tool.</emphasis> The BEGIN_RUN items from the previously separate data streams will be labeled as originating from the same data stream (i.e. they will be provided the same source id). However, the PHYSICS_EVENTS from those data streams will retain their unique identities because the FragmentHeaders within those streams will contain the proper source ids. The result of this will be that the ordering stage will have to undergo a barrier timeout, thereby waiting for 1 min 20 seconds before continuing. In that time, the process writing data to disk will stop waiting and terminate. Long story made short, it will fail! 
          </para>
        </listitem>
      </orderedlist>

    </section>
  </section>

  <section>
    <title>Using the Offline EVB and Orderer</title>
    <section>
      <title>Setting up Jobs</title>
      <para>
        The offline event builder processes "jobs." A job is simply a set of configuration parameters that are attached to a set of run segments for processing. The user is expected to configure the parameters for each set of run segments that are to be processed. The initial display that the user is presented with is the job configuration interface (see <xref linkend="offevb_fig1"/>).  From here, the user can add, edit, and remove jobs that are staged for processing.
      </para>
      
      <figure id="offevb_fig1">
        <title>The Offline Orderer's job configuration interface</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="figures/OfflineEVBJobBuilder.png" align="center" format='PNG'/>
          </imageobject>
        </mediaobject>
      </figure>

    </section>

    <section>
      <title>Creating a job</title>
      <orderedlist>

        <listitem>
          <para>Click "Add Job"</para>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/OfflineEVB-HowToCreateJob-1.png" align="center" format='PNG'/>
            </imageobject>
          </mediaobject>
        </listitem>

        <listitem>
          <para>
            At this point, the user will be presented with a configuration dialogue. Add all run segments for the given run by clicking "Add Files." (Tip: it is possible to select more than one file in the browser).  Note that any file added should have the proper file name format (prefix-xxxx-yy.evt) where the xxxx is the run number and yy is the run segment. If this format is not found, an error will be given because the offline orderer will not be able to know the run number and subsequently where to store the output data file.
          </para>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/OfflineEVB-HowToCreateJob-2.png" align="center" format='PNG'/>
            </imageobject>
          </mediaobject>
         </listitem>

        <listitem>
          <para>
            Adjust the "Number of end runs to expect" to correspond to how many end runs are in the file. This is VERY IMPORTANT to get right because a job will not properly finish processing unless the number of end runs specified are found. 
          </para>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/OfflineEVB-HowToCreateJob-3.png" align="center" format='PNG'/>
            </imageobject>
          </mediaobject>
         </listitem>

        <listitem>
          <para>
            If all of the ring items in the file have body headers embedded in them and the user does not desire to have correlated data in the output file, then the configuration of this job is done. Skip to step <xref linkend="OffEVB_configdone_create"/>.  Otherwise, the following two steps are to be completed on an as needed basis.
          </para>
        </listitem>

        <listitem>
          <para>
            By default, the processed data written to disk will be written without correlating fragments. If the user wants to output correlated data, he/she should select the "Enable event building" checkbox and then specify the correlation window width in units of clock ticks.
          </para>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/OfflineEVB-HowToCreateJob-5.png" align="center" format='PNG'/>
            </imageobject>
          </mediaobject>
         </listitem>

        <listitem>
          <para>
            For data that has ring items without body headers, it is required that the user provides the missing information. Select the "Missing body headers" checkbox to see the additional data entries. It is required that the user fill in the details for the timestamp extraction library and source id. 
          </para>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/OfflineEVB-HowToCreateJob-6.png" align="center" format='PNG'/>
            </imageobject>
          </mediaobject>
         </listitem>


         <listitem id="OffEVB_configdone_create">
           <para>
             Once the job has been fully configured, press the "Create" button. You will find that the job has been added to the list of jobs.
           </para>
         </listitem>

         <listitem>
           <para>
             Repeat steps 1-7 for as many jobs as are needed. To streamline the process of configuring jobs, new jobs retain the same entry information as the last created job. Be sure that you do not enter the same run segments in different jobs, see Limitation <xref linkend="OffEVB_limit1"/>.
           </para>
         </listitem>

         <listitem>
           <para>
             When all the jobs are configured, press "Process Jobs."
           </para>
           <mediaobject>
             <imageobject>
               <imagedata fileref="figures/OfflineEVB-HowToCreateJob-9.png" align="center" format='PNG'/>
             </imageobject>
           </mediaobject>
         </listitem>
         </listitem>

      </orderedlist>
    </section>


    <section>
      <title>Configuring Global Options</title>
      <section>
        <title>Data Flow</title>

        <para>
          The offline event builder and orderer constructs an entire data stream that involves two ring buffers. One of the ring buffers precedes the event builder ("input") and the other follows it ("output"). It is typically not necessary for the user to change which rings that these use, however, the user has been given control to change these options. To configure these, from the configuration interface:
        </para>

        <orderedlist>

          <listitem>
            <para>
              Click on "Config" in the menu bar.
            </para>
            <mediaobject>
              <imageobject>
                <imagedata fileref="figures/OfflineEVB-GlobalConfig-1.png" align="center" format='PNG'/>
              </imageobject>
            </mediaobject>
          </listitem>

          <listitem>
            <para>
              Enter the name of the rings that the user wants to use for the input and output rings. 
            </para>
            <mediaobject>
              <imageobject>
                <imagedata fileref="figures/OfflineEVB-GlobalConfig-2.png" align="center" format='PNG'/>
              </imageobject>
            </mediaobject>
          </listitem>

          <listitem>
            <para>
              To apply these changes to all existing and subsequent jobs, click the "Apply" button. To refrain from using the changes, do not click "Apply."
            </para>
          </listitem>

          <listitem>
            <para>
              To return to the job configuration interface, click the "Back" button. <emphasis>Note that doing so does NOT apply the changes.</emphasis>
            </para>
          </listitem>

        </orderedlist>
        
      </section>

      <section>
        <title>Output Directory</title>
        <para>
          You may recall that during a ReadoutGUI session, the ReadoutGUI manages a directory called the "stagearea." During a run, the data files are written into stagearea/experiment/current and then after the run ends, these files are copied/moved into the appropriate stagearea/experiment/run# directory and a link created in the stagearea/complete directory. The offline event builder and orderer operates the exact same way. It is imperative that the user configures their system to avoid clashes caused by output files. In the global configuration dialogue, the user can choose the location of their stagearea directory. Such a stagearea must have the following directory structure:
        </para>

        <orderedlist>

          <listitem>
            <para>
              Click on "Config" in the menu bar.
            </para>
            <mediaobject>
              <imageobject>
                <imagedata fileref="figures/OfflineEVB-GlobalConfigOutput-1.png" align="center" format='PNG'/>
              </imageobject>
            </mediaobject>
          </listitem>

          <listitem>
            <para>
              Enter the name of the rings that the user wants to use for the input and output rings. 
            </para>
            <mediaobject>
              <imageobject>
                <imagedata fileref="figures/OfflineEVB-GlobalConfigOutput-2.png" align="center" format='PNG'/>
              </imageobject>
            </mediaobject>
          </listitem>

          <listitem>
            <para>
              To apply these changes to all existing and subsequent jobs, click the "Apply" button. To refrain from using the changes, do not click "Apply."
            </para>
          </listitem>

          <listitem>
            <para>
              To return to the job configuration interface, click the "Back" button. <emphasis>Note that doing so does NOT apply the changes.</emphasis>
            </para>
          </listitem>
        </orderedlist>

      </section>

    </section>

  </section>


</chapter>


<!-- /chapter -->
