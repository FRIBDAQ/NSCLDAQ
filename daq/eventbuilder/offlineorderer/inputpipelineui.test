
package require tcltest
package require snit

tcltest::test pkgrequire-0 {Test that we can require the package 
} -body {
  package require OfflineEVBInputPipelineUI
} -result 11.0 -returnCodes 0


## Redefine the gui building to be nothing. Instead we will just
#  inquire of the state of the view
#
snit::method InputPipeConfigUIView buildGUI {} {}




tcltest::test ctor-0 {Test that no -widgetname equates to error
} -body {
  InputPipeConfigUIPresenter meh
} -returnCodes 1 -result "Error in constructor: InputPipeConfigUIPresenter -widgetname option is mandatory but was not provided!"






tcltest::test setmodel-0 {Test that I can set the -inputring
} -setup {
  set prsntr [InputPipeConfigUIPresenter %AUTO% -widgetname .test]
  set params [OfflineEVBInputPipeParams %AUTO% -inputring asdf -unglomid 100 ]
} -cleanup {
  $prsntr destroy
  $params destroy
  destroy .test
  
}  -body {
  $prsntr setModel $params

  [$prsntr getModel] cget -inputring
} -result asdf

tcltest::test setmodel-1 {Test that I can set the -unglomid 
} -setup {
  set prsntr [InputPipeConfigUIPresenter %AUTO% -widgetname .test]
  set params [OfflineEVBInputPipeParams %AUTO% -inputring asdf -unglomid 100 ]
} -cleanup {
  $prsntr destroy
  $params destroy
  destroy .test
}  -body {
  $prsntr setModel $params

  [$prsntr getModel] cget -unglomid
} -result 100





tcltest::test updateViewData-0 {Test that the view data updates -inputring
} -setup {
  set prsntr [InputPipeConfigUIPresenter %AUTO% -widgetname .test]
  set params [OfflineEVBInputPipeParams %AUTO% -inputring asdf -unglomid 100 ]
} -cleanup {
  $prsntr destroy
  $params destroy
  destroy .test
} -body {
  $prsntr updateViewData [OfflineEVBInputPipeParams %AUTO% -inputring testring -unglomid 33]

  set view [$prsntr getViewObj]

  $view cget -inputring
} -result testring

tcltest::test updateViewData-1 {Test that the view data updates -unglomid
} -setup {
  set prsntr [InputPipeConfigUIPresenter %AUTO% -widgetname .test]
  set params [OfflineEVBInputPipeParams %AUTO% -inputring asdf -unglomid 100 ]
} -cleanup {
  $prsntr destroy
  $params destroy
  destroy .test
} -body {
  $prsntr updateViewData [OfflineEVBInputPipeParams %AUTO% -inputring testring -unglomid 33]

  set view [$prsntr getViewObj]

  $view cget -unglomid
} -result 33 





tcltest::test commitViewDataToModel-0 {Test that the view data -inputring translates to the model
} -setup {
  set prsntr [InputPipeConfigUIPresenter %AUTO% -widgetname .test]
  set params [OfflineEVBInputPipeParams %AUTO% -inputring asdf -unglomid 100 ]
} -cleanup {
  $prsntr destroy
  $params destroy
  destroy .test
} -body {
  set view [$prsntr getViewObj]
  $view configure -inputring foobar 
  $prsntr commitViewDataToModel

  [$prsntr getModel] cget -inputring
} -result foobar

tcltest::test commitViewDataToModel-1 {Test that the view data -unglomid translates to the model
} -setup {
  set prsntr [InputPipeConfigUIPresenter %AUTO% -widgetname .test]
  set params [OfflineEVBInputPipeParams %AUTO% -inputring asdf -unglomid 100 ]
} -cleanup {
  $prsntr destroy
  $params destroy
  destroy .test
} -body {
  set view [$prsntr getViewObj]
  $view configure -unglomid 12
  $prsntr commitViewDataToModel

  [$prsntr getModel] cget -unglomid
} -result 12



tcltest::cleanupTests
