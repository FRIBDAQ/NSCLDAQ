#    This software is Copyright by the Board of Trustees of Michigan
#    State University (c) Copyright 2013.
#
#    You may use this software under the terms of the GNU public license
#    (GPL).  The terms of this license are described at:
#
#     http://www.gnu.org/licenses/gpl.txt
#
#    Author:
#            Ron Fox
#            NSCL
#            Michigan State University
#            East Lansing, MI 48824-1321

##
# @file state.test
# @brief Tests for program state save/restore
# @author Ron Fox <fox@nscl.msu.edu>

package require tcltest
package require StateManager

#-----------------------------------------------------------------------------
# Construction tests

tcltest::test construct-0 {Construction provides an identifier} \
-cleanup {
    a destroy
} \
-body {
    StateManager a
} -result ::a

tcltest::test construct-1 {Can construct with a -file parameter} \
-cleanup {
    a destroy
} \
-body {
    StateManager a -file config.tcl
    a cget -file
} -result config.tcl

#---------------------------------------------------------------------------
#  Registration/listing tests.
#

tcltest::test register-list-1 {Registration is reflected in listings} \
-setup {
    StateManager a
} \
-cleanup {
    a destroy
} \
-body {
    a addStateVariable test setTest getTest
    a listStateVariables
    
} -result [list [list test setTest getTest]]


tcltest::test register-list-2 {Duplicate registration is an error} \
-setup {
    StateManager a
} \
-cleanup {
    a destroy
} \
-body {
    a addStateVariable test setTest getTest
    set status [catch {a addStateVariable test setTest getTest} message]
    list $status $message
} -result [list 1 {There is already a registration for the variable 'test'}]

tcltest::test register-list-3 {Registration order is preserved} \
-setup {
    StateManager a
} \
-cleanup {
    a destroy
} \
-body {
    a addStateVariable test setTest getTest
    a addStateVariable btest setbTest getbTest
} -result [list [list test setTest getTest] [list btest setbTest getbTest]]

#------------------------------------------------------------------------------
# Save tests

# Save/restore tests use the infrastructure below:

set a {this is one variable}
set b {this is another variable}

proc setter {varname value} {
    set ::$varname $value
}
proc getter {varname} {
    set ::$varname
}

tcltest::test save-1 {Save without -file set is an error} \
-setup {
    StateManager a
} \
-cleanup {
    a destroy
    catch {file delete settings.test}
} \
-body {
   
    set status [catch {a save} message]
    list $status $message
} -result [list 1 {Cannot save prior to configuring -file}]

tcltest::test save-2 {Save with nothing monitored is an empty file}

tcltest::test save-3 {Save with a registered makes a file with set a...}

tcltest::test save-4 {Save with a,b, registered makes a file with set a, set b}


# Report the test results.

tcltest::cleanupTests